{"version":3,"file":"chunk-YWFND7JV-BxSp01pr.chunk.mjs","sources":["../node_modules/mermaid/dist/chunks/mermaid.core/chunk-YWFND7JV.mjs"],"sourcesContent":["import {\n  createText,\n  replaceIconSubstring\n} from \"./chunk-5N55DQE6.mjs\";\nimport {\n  decodeEntities\n} from \"./chunk-2EDTWDYI.mjs\";\nimport {\n  __name,\n  evaluate,\n  getConfig2 as getConfig,\n  log,\n  sanitizeText\n} from \"./chunk-IIKMQLIC.mjs\";\n\n// src/dagre-wrapper/createLabel.js\nimport { select } from \"d3\";\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n__name(applyStyle, \"applyStyle\");\nfunction addHtmlLabel(node) {\n  const fo = select(document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\"));\n  const div = fo.append(\"xhtml:div\");\n  const label = node.label;\n  const labelClass = node.isNode ? \"nodeLabel\" : \"edgeLabel\";\n  const span = div.append(\"span\");\n  span.html(label);\n  applyStyle(span, node.labelStyle);\n  span.attr(\"class\", labelClass);\n  applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  div.style(\"white-space\", \"nowrap\");\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n  return fo.node();\n}\n__name(addHtmlLabel, \"addHtmlLabel\");\nvar createLabel = /* @__PURE__ */ __name((_vertexText, style, isTitle, isNode) => {\n  let vertexText = _vertexText || \"\";\n  if (typeof vertexText === \"object\") {\n    vertexText = vertexText[0];\n  }\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    vertexText = vertexText.replace(/\\\\n|\\n/g, \"<br />\");\n    log.debug(\"vertexText\" + vertexText);\n    const node = {\n      isNode,\n      label: replaceIconSubstring(decodeEntities(vertexText)),\n      labelStyle: style.replace(\"fill:\", \"color:\")\n    };\n    let vertexNode = addHtmlLabel(node);\n    return vertexNode;\n  } else {\n    const svgLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    svgLabel.setAttribute(\"style\", style.replace(\"color:\", \"fill:\"));\n    let rows = [];\n    if (typeof vertexText === \"string\") {\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n    } else if (Array.isArray(vertexText)) {\n      rows = vertexText;\n    } else {\n      rows = [];\n    }\n    for (const row of rows) {\n      const tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n      tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n      tspan.setAttribute(\"dy\", \"1em\");\n      tspan.setAttribute(\"x\", \"0\");\n      if (isTitle) {\n        tspan.setAttribute(\"class\", \"title-row\");\n      } else {\n        tspan.setAttribute(\"class\", \"row\");\n      }\n      tspan.textContent = row.trim();\n      svgLabel.appendChild(tspan);\n    }\n    return svgLabel;\n  }\n}, \"createLabel\");\nvar createLabel_default = createLabel;\n\n// src/dagre-wrapper/shapes/util.js\nimport { select as select2 } from \"d3\";\nvar labelHelper = /* @__PURE__ */ __name(async (parent, node, _classes, isNode) => {\n  const config = getConfig();\n  let classes;\n  const useHtmlLabels = node.useHtmlLabels || evaluate(config.flowchart.htmlLabels);\n  if (!_classes) {\n    classes = \"node default\";\n  } else {\n    classes = _classes;\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"label\").attr(\"style\", node.labelStyle);\n  let labelText;\n  if (node.labelText === void 0) {\n    labelText = \"\";\n  } else {\n    labelText = typeof node.labelText === \"string\" ? node.labelText : node.labelText[0];\n  }\n  const textNode = label.node();\n  let text;\n  if (node.labelType === \"markdown\") {\n    text = createText(\n      label,\n      sanitizeText(decodeEntities(labelText), config),\n      {\n        useHtmlLabels,\n        width: node.width || config.flowchart.wrappingWidth,\n        classes: \"markdown-node-label\"\n      },\n      config\n    );\n  } else {\n    text = textNode.appendChild(\n      createLabel_default(sanitizeText(decodeEntities(labelText), config), node.labelStyle, false, isNode)\n    );\n  }\n  let bbox = text.getBBox();\n  const halfPadding = node.padding / 2;\n  if (evaluate(config.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select2(text);\n    const images = div.getElementsByTagName(\"img\");\n    if (images) {\n      const noImgText = labelText.replace(/<img[^>]*>/g, \"\").trim() === \"\";\n      await Promise.all(\n        [...images].map(\n          (img) => new Promise((res) => {\n            function setupImage() {\n              img.style.display = \"flex\";\n              img.style.flexDirection = \"column\";\n              if (noImgText) {\n                const bodyFontSize = config.fontSize ? config.fontSize : window.getComputedStyle(document.body).fontSize;\n                const enlargingFactor = 5;\n                const width = parseInt(bodyFontSize, 10) * enlargingFactor + \"px\";\n                img.style.minWidth = width;\n                img.style.maxWidth = width;\n              } else {\n                img.style.width = \"100%\";\n              }\n              res(img);\n            }\n            __name(setupImage, \"setupImage\");\n            setTimeout(() => {\n              if (img.complete) {\n                setupImage();\n              }\n            });\n            img.addEventListener(\"error\", setupImage);\n            img.addEventListener(\"load\", setupImage);\n          })\n        )\n      );\n    }\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  if (useHtmlLabels) {\n    label.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  } else {\n    label.attr(\"transform\", \"translate(0, \" + -bbox.height / 2 + \")\");\n  }\n  if (node.centerLabel) {\n    label.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  }\n  label.insert(\"rect\", \":first-child\");\n  return { shapeSvg, bbox, halfPadding, label };\n}, \"labelHelper\");\nvar updateNodeBounds = /* @__PURE__ */ __name((node, element) => {\n  const bbox = element.node().getBBox();\n  node.width = bbox.width;\n  node.height = bbox.height;\n}, \"updateNodeBounds\");\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\n    \"points\",\n    points.map(function(d) {\n      return d.x + \",\" + d.y;\n    }).join(\" \")\n  ).attr(\"class\", \"label-container\").attr(\"transform\", \"translate(\" + -w / 2 + \",\" + h / 2 + \")\");\n}\n__name(insertPolygonShape, \"insertPolygonShape\");\n\n// src/dagre-wrapper/nodes.js\nimport { select as select3 } from \"d3\";\n\n// src/dagre-wrapper/blockArrowHelper.ts\nvar expandAndDeduplicateDirections = /* @__PURE__ */ __name((directions) => {\n  const uniqueDirections = /* @__PURE__ */ new Set();\n  for (const direction of directions) {\n    switch (direction) {\n      case \"x\":\n        uniqueDirections.add(\"right\");\n        uniqueDirections.add(\"left\");\n        break;\n      case \"y\":\n        uniqueDirections.add(\"up\");\n        uniqueDirections.add(\"down\");\n        break;\n      default:\n        uniqueDirections.add(direction);\n        break;\n    }\n  }\n  return uniqueDirections;\n}, \"expandAndDeduplicateDirections\");\nvar getArrowPoints = /* @__PURE__ */ __name((duplicatedDirections, bbox, node) => {\n  const directions = expandAndDeduplicateDirections(duplicatedDirections);\n  const f = 2;\n  const height = bbox.height + 2 * node.padding;\n  const midpoint = height / f;\n  const width = bbox.width + 2 * midpoint + node.padding;\n  const padding = node.padding / 2;\n  if (directions.has(\"right\") && directions.has(\"left\") && directions.has(\"up\") && directions.has(\"down\")) {\n    return [\n      // Bottom\n      { x: 0, y: 0 },\n      { x: midpoint, y: 0 },\n      { x: width / 2, y: 2 * padding },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: 0 },\n      // Right\n      { x: width, y: -height / 3 },\n      { x: width + 2 * padding, y: -height / 2 },\n      { x: width, y: -2 * height / 3 },\n      { x: width, y: -height },\n      // Top\n      { x: width - midpoint, y: -height },\n      { x: width / 2, y: -height - 2 * padding },\n      { x: midpoint, y: -height },\n      // Left\n      { x: 0, y: -height },\n      { x: 0, y: -2 * height / 3 },\n      { x: -2 * padding, y: -height / 2 },\n      { x: 0, y: -height / 3 }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"left\") && directions.has(\"up\")) {\n    return [\n      { x: midpoint, y: 0 },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: -height / 2 },\n      { x: width - midpoint, y: -height },\n      { x: midpoint, y: -height },\n      { x: 0, y: -height / 2 }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"left\") && directions.has(\"down\")) {\n    return [\n      { x: 0, y: 0 },\n      { x: midpoint, y: -height },\n      { x: width - midpoint, y: -height },\n      { x: width, y: 0 }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"up\") && directions.has(\"down\")) {\n    return [\n      { x: 0, y: 0 },\n      { x: width, y: -midpoint },\n      { x: width, y: -height + midpoint },\n      { x: 0, y: -height }\n    ];\n  }\n  if (directions.has(\"left\") && directions.has(\"up\") && directions.has(\"down\")) {\n    return [\n      { x: width, y: 0 },\n      { x: 0, y: -midpoint },\n      { x: 0, y: -height + midpoint },\n      { x: width, y: -height }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"left\")) {\n    return [\n      { x: midpoint, y: 0 },\n      { x: midpoint, y: -padding },\n      { x: width - midpoint, y: -padding },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: -height / 2 },\n      { x: width - midpoint, y: -height },\n      { x: width - midpoint, y: -height + padding },\n      { x: midpoint, y: -height + padding },\n      { x: midpoint, y: -height },\n      { x: 0, y: -height / 2 }\n    ];\n  }\n  if (directions.has(\"up\") && directions.has(\"down\")) {\n    return [\n      // Bottom center\n      { x: width / 2, y: 0 },\n      // Left pont of bottom arrow\n      { x: 0, y: -padding },\n      { x: midpoint, y: -padding },\n      // Left top over vertical section\n      { x: midpoint, y: -height + padding },\n      { x: 0, y: -height + padding },\n      // Top of arrow\n      { x: width / 2, y: -height },\n      { x: width, y: -height + padding },\n      // Top of right vertical bar\n      { x: width - midpoint, y: -height + padding },\n      { x: width - midpoint, y: -padding },\n      { x: width, y: -padding }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"up\")) {\n    return [\n      { x: 0, y: 0 },\n      { x: width, y: -midpoint },\n      { x: 0, y: -height }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"down\")) {\n    return [\n      { x: 0, y: 0 },\n      { x: width, y: 0 },\n      { x: 0, y: -height }\n    ];\n  }\n  if (directions.has(\"left\") && directions.has(\"up\")) {\n    return [\n      { x: width, y: 0 },\n      { x: 0, y: -midpoint },\n      { x: width, y: -height }\n    ];\n  }\n  if (directions.has(\"left\") && directions.has(\"down\")) {\n    return [\n      { x: width, y: 0 },\n      { x: 0, y: 0 },\n      { x: width, y: -height }\n    ];\n  }\n  if (directions.has(\"right\")) {\n    return [\n      { x: midpoint, y: -padding },\n      { x: midpoint, y: -padding },\n      { x: width - midpoint, y: -padding },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: -height / 2 },\n      { x: width - midpoint, y: -height },\n      { x: width - midpoint, y: -height + padding },\n      // top left corner of arrow\n      { x: midpoint, y: -height + padding },\n      { x: midpoint, y: -height + padding }\n    ];\n  }\n  if (directions.has(\"left\")) {\n    return [\n      { x: midpoint, y: 0 },\n      { x: midpoint, y: -padding },\n      // Two points, the right corners\n      { x: width - midpoint, y: -padding },\n      { x: width - midpoint, y: -height + padding },\n      { x: midpoint, y: -height + padding },\n      { x: midpoint, y: -height },\n      { x: 0, y: -height / 2 }\n    ];\n  }\n  if (directions.has(\"up\")) {\n    return [\n      // Bottom center\n      { x: midpoint, y: -padding },\n      // Left top over vertical section\n      { x: midpoint, y: -height + padding },\n      { x: 0, y: -height + padding },\n      // Top of arrow\n      { x: width / 2, y: -height },\n      { x: width, y: -height + padding },\n      // Top of right vertical bar\n      { x: width - midpoint, y: -height + padding },\n      { x: width - midpoint, y: -padding }\n    ];\n  }\n  if (directions.has(\"down\")) {\n    return [\n      // Bottom center\n      { x: width / 2, y: 0 },\n      // Left pont of bottom arrow\n      { x: 0, y: -padding },\n      { x: midpoint, y: -padding },\n      // Left top over vertical section\n      { x: midpoint, y: -height + padding },\n      { x: width - midpoint, y: -height + padding },\n      { x: width - midpoint, y: -padding },\n      { x: width, y: -padding }\n    ];\n  }\n  return [{ x: 0, y: 0 }];\n}, \"getArrowPoints\");\n\n// src/dagre-wrapper/intersect/intersect-node.js\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n__name(intersectNode, \"intersectNode\");\nvar intersect_node_default = intersectNode;\n\n// src/dagre-wrapper/intersect/intersect-ellipse.js\nfunction intersectEllipse(node, rx, ry, point) {\n  var cx = node.x;\n  var cy = node.y;\n  var px = cx - point.x;\n  var py = cy - point.y;\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n  return { x: cx + dx, y: cy + dy };\n}\n__name(intersectEllipse, \"intersectEllipse\");\nvar intersect_ellipse_default = intersectEllipse;\n\n// src/dagre-wrapper/intersect/intersect-circle.js\nfunction intersectCircle(node, rx, point) {\n  return intersect_ellipse_default(node, rx, rx, point);\n}\n__name(intersectCircle, \"intersectCircle\");\nvar intersect_circle_default = intersectCircle;\n\n// src/dagre-wrapper/intersect/intersect-line.js\nfunction intersectLine(p1, p2, q1, q2) {\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return;\n  }\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return;\n  }\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return;\n  }\n  offset = Math.abs(denom / 2);\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  return { x, y };\n}\n__name(intersectLine, \"intersectLine\");\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n__name(sameSign, \"sameSign\");\nvar intersect_line_default = intersectLine;\n\n// src/dagre-wrapper/intersect/intersect-polygon.js\nvar intersect_polygon_default = intersectPolygon;\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n  var intersections = [];\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  if (typeof polyPoints.forEach === \"function\") {\n    polyPoints.forEach(function(entry) {\n      minX = Math.min(minX, entry.x);\n      minY = Math.min(minY, entry.y);\n    });\n  } else {\n    minX = Math.min(minX, polyPoints.x);\n    minY = Math.min(minY, polyPoints.y);\n  }\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersect_line_default(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n  if (!intersections.length) {\n    return node;\n  }\n  if (intersections.length > 1) {\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n__name(intersectPolygon, \"intersectPolygon\");\n\n// src/dagre-wrapper/intersect/intersect-rect.js\nvar intersectRect = /* @__PURE__ */ __name((node, point) => {\n  var x = node.x;\n  var y = node.y;\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n  return { x: x + sx, y: y + sy };\n}, \"intersectRect\");\nvar intersect_rect_default = intersectRect;\n\n// src/dagre-wrapper/intersect/index.js\nvar intersect_default = {\n  node: intersect_node_default,\n  circle: intersect_circle_default,\n  ellipse: intersect_ellipse_default,\n  polygon: intersect_polygon_default,\n  rect: intersect_rect_default\n};\n\n// src/dagre-wrapper/shapes/note.js\nvar note = /* @__PURE__ */ __name(async (parent, node) => {\n  const useHtmlLabels = node.useHtmlLabels || getConfig().flowchart.htmlLabels;\n  if (!useHtmlLabels) {\n    node.centerLabel = true;\n  }\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    \"node \" + node.classes,\n    true\n  );\n  log.info(\"Classes = \", node.classes);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", -bbox.width / 2 - halfPadding).attr(\"y\", -bbox.height / 2 - halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}, \"note\");\nvar note_default = note;\n\n// src/dagre-wrapper/nodes.js\nvar formatClass = /* @__PURE__ */ __name((str) => {\n  if (str) {\n    return \" \" + str;\n  }\n  return \"\";\n}, \"formatClass\");\nvar getClassesFromNode = /* @__PURE__ */ __name((node, otherClasses) => {\n  return `${otherClasses ? otherClasses : \"node default\"}${formatClass(node.classes)} ${formatClass(\n    node.class\n  )}`;\n}, \"getClassesFromNode\");\nvar question = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const s = w + h;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 }\n  ];\n  log.info(\"Question main (Circle)\");\n  const questionElem = insertPolygonShape(shapeSvg, s, s, points);\n  questionElem.attr(\"style\", node.style);\n  updateNodeBounds(node, questionElem);\n  node.intersect = function(point) {\n    log.warn(\"Intersect called\");\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}, \"question\");\nvar choice = /* @__PURE__ */ __name((parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  const s = 28;\n  const points = [\n    { x: 0, y: s / 2 },\n    { x: s / 2, y: 0 },\n    { x: 0, y: -s / 2 },\n    { x: -s / 2, y: 0 }\n  ];\n  const choice2 = shapeSvg.insert(\"polygon\", \":first-child\").attr(\n    \"points\",\n    points.map(function(d) {\n      return d.x + \",\" + d.y;\n    }).join(\" \")\n  );\n  choice2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 28).attr(\"height\", 28);\n  node.width = 28;\n  node.height = 28;\n  node.intersect = function(point) {\n    return intersect_default.circle(node, 14, point);\n  };\n  return shapeSvg;\n}, \"choice\");\nvar hexagon = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const f = 4;\n  const h = bbox.height + node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const hex = insertPolygonShape(shapeSvg, w, h, points);\n  hex.attr(\"style\", node.style);\n  updateNodeBounds(node, hex);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}, \"hexagon\");\nvar block_arrow = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\n  const f = 2;\n  const h = bbox.height + 2 * node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = getArrowPoints(node.directions, bbox, node);\n  const blockArrow = insertPolygonShape(shapeSvg, w, h, points);\n  blockArrow.attr(\"style\", node.style);\n  updateNodeBounds(node, blockArrow);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}, \"block_arrow\");\nvar rect_left_inv_arrow = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  node.width = w + h;\n  node.height = h;\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}, \"rect_left_inv_arrow\");\nvar lean_right = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getClassesFromNode(node), true);\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}, \"lean_right\");\nvar lean_left = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 2 * h / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - 2 * h / 6, y: -h },\n    { x: -h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}, \"lean_left\");\nvar trapezoid = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}, \"trapezoid\");\nvar inv_trapezoid = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: -2 * h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}, \"inv_trapezoid\");\nvar rect_right_inv_arrow = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}, \"rect_right_inv_arrow\");\nvar cylinder = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry + node.padding;\n  const shape = \"M 0,\" + ry + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 a \" + rx + \",\" + ry + \" 0,0,0 \" + -w + \" 0 l 0,\" + h + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 l 0,\" + -h;\n  const el = shapeSvg.attr(\"label-offset-y\", ry).insert(\"path\", \":first-child\").attr(\"style\", node.style).attr(\"d\", shape).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + -(h / 2 + ry) + \")\");\n  updateNodeBounds(node, el);\n  node.intersect = function(point) {\n    const pos = intersect_default.rect(node, point);\n    const x = pos.x - node.x;\n    if (rx != 0 && (Math.abs(x) < node.width / 2 || Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry)) {\n      let y = ry * ry * (1 - x * x / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n      pos.y += y;\n    }\n    return pos;\n  };\n  return shapeSvg;\n}, \"cylinder\");\nvar rect = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    \"node \" + node.classes + \" \" + node.class,\n    true\n  );\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const totalWidth = node.positioned ? node.width : bbox.width + node.padding;\n  const totalHeight = node.positioned ? node.height : bbox.height + node.padding;\n  const x = node.positioned ? -totalWidth / 2 : -bbox.width / 2 - halfPadding;\n  const y = node.positioned ? -totalHeight / 2 : -bbox.height / 2 - halfPadding;\n  rect2.attr(\"class\", \"basic label-container\").attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", x).attr(\"y\", y).attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete(\"borders\");\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}, \"rect\");\nvar composite = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    \"node \" + node.classes,\n    true\n  );\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const totalWidth = node.positioned ? node.width : bbox.width + node.padding;\n  const totalHeight = node.positioned ? node.height : bbox.height + node.padding;\n  const x = node.positioned ? -totalWidth / 2 : -bbox.width / 2 - halfPadding;\n  const y = node.positioned ? -totalHeight / 2 : -bbox.height / 2 - halfPadding;\n  rect2.attr(\"class\", \"basic cluster composite label-container\").attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", x).attr(\"y\", y).attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete(\"borders\");\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}, \"composite\");\nvar labelRect = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg } = await labelHelper(parent, node, \"label\", true);\n  log.trace(\"Classes = \", node.class);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const totalWidth = 0;\n  const totalHeight = 0;\n  rect2.attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  shapeSvg.attr(\"class\", \"label edgeLabel\");\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete(\"borders\");\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}, \"labelRect\");\nfunction applyNodePropertyBorders(rect2, borders, totalWidth, totalHeight) {\n  const strokeDashArray = [];\n  const addBorder = /* @__PURE__ */ __name((length) => {\n    strokeDashArray.push(length, 0);\n  }, \"addBorder\");\n  const skipBorder = /* @__PURE__ */ __name((length) => {\n    strokeDashArray.push(0, length);\n  }, \"skipBorder\");\n  if (borders.includes(\"t\")) {\n    log.debug(\"add top border\");\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes(\"r\")) {\n    log.debug(\"add right border\");\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  if (borders.includes(\"b\")) {\n    log.debug(\"add bottom border\");\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes(\"l\")) {\n    log.debug(\"add left border\");\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  rect2.attr(\"stroke-dasharray\", strokeDashArray.join(\" \"));\n}\n__name(applyNodePropertyBorders, \"applyNodePropertyBorders\");\nvar rectWithTitle = /* @__PURE__ */ __name((parent, node) => {\n  let classes;\n  if (!node.classes) {\n    classes = \"node default\";\n  } else {\n    classes = \"node \" + node.classes;\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const innerLine = shapeSvg.insert(\"line\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"label\");\n  const text2 = node.labelText.flat ? node.labelText.flat() : node.labelText;\n  let title = \"\";\n  if (typeof text2 === \"object\") {\n    title = text2[0];\n  } else {\n    title = text2;\n  }\n  log.info(\"Label text abc79\", title, text2, typeof text2 === \"object\");\n  const text = label.node().appendChild(createLabel_default(title, node.labelStyle, true, true));\n  let bbox = { width: 0, height: 0 };\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select3(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  log.info(\"Text 2\", text2);\n  const textRows = text2.slice(1, text2.length);\n  let titleBox = text.getBBox();\n  const descr = label.node().appendChild(\n    createLabel_default(textRows.join ? textRows.join(\"<br/>\") : textRows, node.labelStyle, true, true)\n  );\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = descr.children[0];\n    const dv = select3(descr);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const halfPadding = node.padding / 2;\n  select3(descr).attr(\n    \"transform\",\n    \"translate( \" + // (titleBox.width - bbox.width) / 2 +\n    (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) + \", \" + (titleBox.height + halfPadding + 5) + \")\"\n  );\n  select3(text).attr(\n    \"transform\",\n    \"translate( \" + // (titleBox.width - bbox.width) / 2 +\n    (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) + \", 0)\"\n  );\n  bbox = label.node().getBBox();\n  label.attr(\n    \"transform\",\n    \"translate(\" + -bbox.width / 2 + \", \" + (-bbox.height / 2 - halfPadding + 3) + \")\"\n  );\n  rect2.attr(\"class\", \"outer title-state\").attr(\"x\", -bbox.width / 2 - halfPadding).attr(\"y\", -bbox.height / 2 - halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  innerLine.attr(\"class\", \"divider\").attr(\"x1\", -bbox.width / 2 - halfPadding).attr(\"x2\", bbox.width / 2 + halfPadding).attr(\"y1\", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding).attr(\"y2\", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}, \"rectWithTitle\");\nvar stadium = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const h = bbox.height + node.padding;\n  const w = bbox.width + h / 4 + node.padding;\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\").attr(\"style\", node.style).attr(\"rx\", h / 2).attr(\"ry\", h / 2).attr(\"x\", -w / 2).attr(\"y\", -h / 2).attr(\"width\", w).attr(\"height\", h);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}, \"stadium\");\nvar circle = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\n  circle2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  log.info(\"Circle main\");\n  updateNodeBounds(node, circle2);\n  node.intersect = function(point) {\n    log.info(\"Circle intersect\", node, bbox.width / 2 + halfPadding, point);\n    return intersect_default.circle(node, bbox.width / 2 + halfPadding, point);\n  };\n  return shapeSvg;\n}, \"circle\");\nvar doublecircle = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const gap = 5;\n  const circleGroup = shapeSvg.insert(\"g\", \":first-child\");\n  const outerCircle = circleGroup.insert(\"circle\");\n  const innerCircle = circleGroup.insert(\"circle\");\n  circleGroup.attr(\"class\", node.class);\n  outerCircle.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding + gap).attr(\"width\", bbox.width + node.padding + gap * 2).attr(\"height\", bbox.height + node.padding + gap * 2);\n  innerCircle.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  log.info(\"DoubleCircle main\");\n  updateNodeBounds(node, outerCircle);\n  node.intersect = function(point) {\n    log.info(\"DoubleCircle intersect\", node, bbox.width / 2 + halfPadding + gap, point);\n    return intersect_default.circle(node, bbox.width / 2 + halfPadding + gap, point);\n  };\n  return shapeSvg;\n}, \"doublecircle\");\nvar subroutine = /* @__PURE__ */ __name(async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}, \"subroutine\");\nvar start = /* @__PURE__ */ __name((parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\n  circle2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 14).attr(\"height\", 14);\n  updateNodeBounds(node, circle2);\n  node.intersect = function(point) {\n    return intersect_default.circle(node, 7, point);\n  };\n  return shapeSvg;\n}, \"start\");\nvar forkJoin = /* @__PURE__ */ __name((parent, node, dir) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  let width = 70;\n  let height = 10;\n  if (dir === \"LR\") {\n    width = 10;\n    height = 70;\n  }\n  const shape = shapeSvg.append(\"rect\").attr(\"x\", -1 * width / 2).attr(\"y\", -1 * height / 2).attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"fork-join\");\n  updateNodeBounds(node, shape);\n  node.height = node.height + node.padding / 2;\n  node.width = node.width + node.padding / 2;\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}, \"forkJoin\");\nvar end = /* @__PURE__ */ __name((parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  const innerCircle = shapeSvg.insert(\"circle\", \":first-child\");\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\n  circle2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 14).attr(\"height\", 14);\n  innerCircle.attr(\"class\", \"state-end\").attr(\"r\", 5).attr(\"width\", 10).attr(\"height\", 10);\n  updateNodeBounds(node, circle2);\n  node.intersect = function(point) {\n    return intersect_default.circle(node, 7, point);\n  };\n  return shapeSvg;\n}, \"end\");\nvar class_box = /* @__PURE__ */ __name((parent, node) => {\n  const halfPadding = node.padding / 2;\n  const rowPadding = 4;\n  const lineHeight = 8;\n  let classes;\n  if (!node.classes) {\n    classes = \"node default\";\n  } else {\n    classes = \"node \" + node.classes;\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const topLine = shapeSvg.insert(\"line\");\n  const bottomLine = shapeSvg.insert(\"line\");\n  let maxWidth = 0;\n  let maxHeight = rowPadding;\n  const labelContainer = shapeSvg.insert(\"g\").attr(\"class\", \"label\");\n  let verticalPos = 0;\n  const hasInterface = node.classData.annotations?.[0];\n  const interfaceLabelText = node.classData.annotations[0] ? \"\\xAB\" + node.classData.annotations[0] + \"\\xBB\" : \"\";\n  const interfaceLabel = labelContainer.node().appendChild(createLabel_default(interfaceLabelText, node.labelStyle, true, true));\n  let interfaceBBox = interfaceLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = interfaceLabel.children[0];\n    const dv = select3(interfaceLabel);\n    interfaceBBox = div.getBoundingClientRect();\n    dv.attr(\"width\", interfaceBBox.width);\n    dv.attr(\"height\", interfaceBBox.height);\n  }\n  if (node.classData.annotations[0]) {\n    maxHeight += interfaceBBox.height + rowPadding;\n    maxWidth += interfaceBBox.width;\n  }\n  let classTitleString = node.classData.label;\n  if (node.classData.type !== void 0 && node.classData.type !== \"\") {\n    if (getConfig().flowchart.htmlLabels) {\n      classTitleString += \"&lt;\" + node.classData.type + \"&gt;\";\n    } else {\n      classTitleString += \"<\" + node.classData.type + \">\";\n    }\n  }\n  const classTitleLabel = labelContainer.node().appendChild(createLabel_default(classTitleString, node.labelStyle, true, true));\n  select3(classTitleLabel).attr(\"class\", \"classTitle\");\n  let classTitleBBox = classTitleLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = classTitleLabel.children[0];\n    const dv = select3(classTitleLabel);\n    classTitleBBox = div.getBoundingClientRect();\n    dv.attr(\"width\", classTitleBBox.width);\n    dv.attr(\"height\", classTitleBBox.height);\n  }\n  maxHeight += classTitleBBox.height + rowPadding;\n  if (classTitleBBox.width > maxWidth) {\n    maxWidth = classTitleBBox.width;\n  }\n  const classAttributes = [];\n  node.classData.members.forEach((member) => {\n    const parsedInfo = member.getDisplayDetails();\n    let parsedText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      parsedText = parsedText.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n    const lbl = labelContainer.node().appendChild(\n      createLabel_default(\n        parsedText,\n        parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n        true,\n        true\n      )\n    );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select3(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr(\"width\", bbox.width);\n      dv.attr(\"height\", bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classAttributes.push(lbl);\n  });\n  maxHeight += lineHeight;\n  const classMethods = [];\n  node.classData.methods.forEach((member) => {\n    const parsedInfo = member.getDisplayDetails();\n    let displayText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      displayText = displayText.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n    const lbl = labelContainer.node().appendChild(\n      createLabel_default(\n        displayText,\n        parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n        true,\n        true\n      )\n    );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select3(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr(\"width\", bbox.width);\n      dv.attr(\"height\", bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classMethods.push(lbl);\n  });\n  maxHeight += lineHeight;\n  if (hasInterface) {\n    let diffX2 = (maxWidth - interfaceBBox.width) / 2;\n    select3(interfaceLabel).attr(\n      \"transform\",\n      \"translate( \" + (-1 * maxWidth / 2 + diffX2) + \", \" + -1 * maxHeight / 2 + \")\"\n    );\n    verticalPos = interfaceBBox.height + rowPadding;\n  }\n  let diffX = (maxWidth - classTitleBBox.width) / 2;\n  select3(classTitleLabel).attr(\n    \"transform\",\n    \"translate( \" + (-1 * maxWidth / 2 + diffX) + \", \" + (-1 * maxHeight / 2 + verticalPos) + \")\"\n  );\n  verticalPos += classTitleBBox.height + rowPadding;\n  topLine.attr(\"class\", \"divider\").attr(\"x1\", -maxWidth / 2 - halfPadding).attr(\"x2\", maxWidth / 2 + halfPadding).attr(\"y1\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos).attr(\"y2\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n  verticalPos += lineHeight;\n  classAttributes.forEach((lbl) => {\n    select3(lbl).attr(\n      \"transform\",\n      \"translate( \" + -maxWidth / 2 + \", \" + (-1 * maxHeight / 2 + verticalPos + lineHeight / 2) + \")\"\n    );\n    const memberBBox = lbl?.getBBox();\n    verticalPos += (memberBBox?.height ?? 0) + rowPadding;\n  });\n  verticalPos += lineHeight;\n  bottomLine.attr(\"class\", \"divider\").attr(\"x1\", -maxWidth / 2 - halfPadding).attr(\"x2\", maxWidth / 2 + halfPadding).attr(\"y1\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos).attr(\"y2\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n  verticalPos += lineHeight;\n  classMethods.forEach((lbl) => {\n    select3(lbl).attr(\n      \"transform\",\n      \"translate( \" + -maxWidth / 2 + \", \" + (-1 * maxHeight / 2 + verticalPos) + \")\"\n    );\n    const memberBBox = lbl?.getBBox();\n    verticalPos += (memberBBox?.height ?? 0) + rowPadding;\n  });\n  rect2.attr(\"style\", node.style).attr(\"class\", \"outer title-state\").attr(\"x\", -maxWidth / 2 - halfPadding).attr(\"y\", -(maxHeight / 2) - halfPadding).attr(\"width\", maxWidth + node.padding).attr(\"height\", maxHeight + node.padding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}, \"class_box\");\nvar shapes = {\n  rhombus: question,\n  composite,\n  question,\n  rect,\n  labelRect,\n  rectWithTitle,\n  choice,\n  circle,\n  doublecircle,\n  stadium,\n  hexagon,\n  block_arrow,\n  rect_left_inv_arrow,\n  lean_right,\n  lean_left,\n  trapezoid,\n  inv_trapezoid,\n  rect_right_inv_arrow,\n  cylinder,\n  start,\n  end,\n  note: note_default,\n  subroutine,\n  fork: forkJoin,\n  join: forkJoin,\n  class_box\n};\nvar nodeElems = {};\nvar insertNode = /* @__PURE__ */ __name(async (elem, node, dir) => {\n  let newEl;\n  let el;\n  if (node.link) {\n    let target;\n    if (getConfig().securityLevel === \"sandbox\") {\n      target = \"_top\";\n    } else if (node.linkTarget) {\n      target = node.linkTarget || \"_blank\";\n    }\n    newEl = elem.insert(\"svg:a\").attr(\"xlink:href\", node.link).attr(\"target\", target);\n    el = await shapes[node.shape](newEl, node, dir);\n  } else {\n    el = await shapes[node.shape](elem, node, dir);\n    newEl = el;\n  }\n  if (node.tooltip) {\n    el.attr(\"title\", node.tooltip);\n  }\n  if (node.class) {\n    el.attr(\"class\", \"node default \" + node.class);\n  }\n  nodeElems[node.id] = newEl;\n  if (node.haveCallback) {\n    nodeElems[node.id].attr(\"class\", nodeElems[node.id].attr(\"class\") + \" clickable\");\n  }\n  return newEl;\n}, \"insertNode\");\nvar setNodeElem = /* @__PURE__ */ __name((elem, node) => {\n  nodeElems[node.id] = elem;\n}, \"setNodeElem\");\nvar clear = /* @__PURE__ */ __name(() => {\n  nodeElems = {};\n}, \"clear\");\nvar positionNode = /* @__PURE__ */ __name((node) => {\n  const el = nodeElems[node.id];\n  log.trace(\n    \"Transforming node\",\n    node.diff,\n    node,\n    \"translate(\" + (node.x - node.width / 2 - 5) + \", \" + node.width / 2 + \")\"\n  );\n  const padding = 8;\n  const diff = node.diff || 0;\n  if (node.clusterNode) {\n    el.attr(\n      \"transform\",\n      \"translate(\" + (node.x + diff - node.width / 2) + \", \" + (node.y - node.height / 2 - padding) + \")\"\n    );\n  } else {\n    el.attr(\"transform\", \"translate(\" + node.x + \", \" + node.y + \")\");\n  }\n  return diff;\n}, \"positionNode\");\n\nexport {\n  createLabel_default,\n  intersect_rect_default,\n  updateNodeBounds,\n  insertNode,\n  setNodeElem,\n  clear,\n  positionNode\n};\n"],"names":["applyStyle","dom","styleFn","__name","addHtmlLabel","node","fo","select","div","label","labelClass","span","createLabel","_vertexText","style","isTitle","isNode","vertexText","evaluate","getConfig","log","replaceIconSubstring","decodeEntities","svgLabel","rows","row","tspan","createLabel_default","labelHelper","parent","_classes","config","classes","useHtmlLabels","shapeSvg","labelText","textNode","text","createText","sanitizeText","bbox","halfPadding","dv","select2","images","noImgText","img","res","setupImage","bodyFontSize","width","updateNodeBounds","element","insertPolygonShape","w","h","points","d","expandAndDeduplicateDirections","directions","uniqueDirections","direction","getArrowPoints","duplicatedDirections","f","height","midpoint","padding","intersectNode","point","intersect_node_default","intersectEllipse","rx","ry","cx","cy","px","py","det","dx","dy","intersect_ellipse_default","intersectCircle","intersect_circle_default","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","x","y","sameSign","intersect_line_default","intersect_polygon_default","intersectPolygon","polyPoints","x1","y1","intersections","minX","minY","entry","left","top","i","intersect","p","q","pdx","pdy","distp","qdx","qdy","distq","intersectRect","sx","sy","intersect_rect_default","intersect_default","note","rect2","note_default","formatClass","str","getClassesFromNode","otherClasses","question","s","questionElem","choice","hexagon","m","hex","block_arrow","blockArrow","rect_left_inv_arrow","lean_right","el","lean_left","trapezoid","inv_trapezoid","rect_right_inv_arrow","cylinder","shape","pos","rect","totalWidth","totalHeight","propKeys","applyNodePropertyBorders","propKey","composite","labelRect","borders","strokeDashArray","addBorder","length","skipBorder","rectWithTitle","innerLine","text2","title","select3","textRows","titleBox","descr","stadium","circle","circle2","doublecircle","gap","circleGroup","outerCircle","innerCircle","subroutine","start","forkJoin","dir","end","class_box","rowPadding","lineHeight","topLine","bottomLine","maxWidth","maxHeight","labelContainer","verticalPos","hasInterface","interfaceLabelText","interfaceLabel","interfaceBBox","classTitleString","classTitleLabel","classTitleBBox","classAttributes","member","parsedInfo","parsedText","lbl","classMethods","displayText","diffX2","diffX","memberBBox","shapes","nodeElems","insertNode","elem","newEl","target","setNodeElem","clear","positionNode","diff"],"mappings":";gHAiBA,SAASA,EAAWC,EAAKC,EAAS,CAC5BA,GACFD,EAAI,KAAK,QAASC,CAAO,CAE7B,CACAC,EAAOH,EAAY,YAAY,EAC/B,SAASI,EAAaC,EAAM,CAC1B,MAAMC,EAAKC,EAAO,SAAS,gBAAgB,6BAA8B,eAAe,CAAC,EACnFC,EAAMF,EAAG,OAAO,WAAW,EAC3BG,EAAQJ,EAAK,MACbK,EAAaL,EAAK,OAAS,YAAc,YACzCM,EAAOH,EAAI,OAAO,MAAM,EAC9B,OAAAG,EAAK,KAAKF,CAAK,EACfT,EAAWW,EAAMN,EAAK,UAAU,EAChCM,EAAK,KAAK,QAASD,CAAU,EAC7BV,EAAWQ,EAAKH,EAAK,UAAU,EAC/BG,EAAI,MAAM,UAAW,cAAc,EACnCA,EAAI,MAAM,cAAe,QAAQ,EACjCA,EAAI,KAAK,QAAS,8BAA8B,EACzCF,EAAG,MACZ,CACAH,EAAOC,EAAc,cAAc,EACnC,IAAIQ,GAA8BT,EAAO,CAACU,EAAaC,EAAOC,EAASC,IAAW,CAChF,IAAIC,EAAaJ,GAAe,GAIhC,GAHI,OAAOI,GAAe,WACxBA,EAAaA,EAAW,CAAC,GAEvBC,EAASC,EAAS,EAAG,UAAU,UAAU,EAAG,CAC9CF,EAAaA,EAAW,QAAQ,UAAW,QAAQ,EACnDG,EAAI,MAAM,aAAeH,CAAU,EACnC,MAAMZ,EAAO,CACX,OAAAW,EACA,MAAOK,GAAqBC,EAAeL,CAAU,CAAC,EACtD,WAAYH,EAAM,QAAQ,QAAS,QAAQ,CACjD,EAEI,OADiBV,EAAaC,CAAI,CAEtC,KAAS,CACL,MAAMkB,EAAW,SAAS,gBAAgB,6BAA8B,MAAM,EAC9EA,EAAS,aAAa,QAAST,EAAM,QAAQ,SAAU,OAAO,CAAC,EAC/D,IAAIU,EAAO,CAAA,EACP,OAAOP,GAAe,SACxBO,EAAOP,EAAW,MAAM,qBAAqB,EACpC,MAAM,QAAQA,CAAU,EACjCO,EAAOP,EAEPO,EAAO,CAAA,EAET,UAAWC,KAAOD,EAAM,CACtB,MAAME,EAAQ,SAAS,gBAAgB,6BAA8B,OAAO,EAC5EA,EAAM,eAAe,uCAAwC,YAAa,UAAU,EACpFA,EAAM,aAAa,KAAM,KAAK,EAC9BA,EAAM,aAAa,IAAK,GAAG,EACvBX,EACFW,EAAM,aAAa,QAAS,WAAW,EAEvCA,EAAM,aAAa,QAAS,KAAK,EAEnCA,EAAM,YAAcD,EAAI,OACxBF,EAAS,YAAYG,CAAK,CAC3B,CACD,OAAOH,CACR,CACH,EAAG,aAAa,EACZI,EAAsBf,GAItBgB,EAA8BzB,EAAO,MAAO0B,EAAQxB,EAAMyB,EAAUd,IAAW,CACjF,MAAMe,EAASZ,IACf,IAAIa,EACJ,MAAMC,EAAgB5B,EAAK,eAAiBa,EAASa,EAAO,UAAU,UAAU,EAC3ED,EAGHE,EAAUF,EAFVE,EAAU,eAIZ,MAAME,EAAWL,EAAO,OAAO,GAAG,EAAE,KAAK,QAASG,CAAO,EAAE,KAAK,KAAM3B,EAAK,OAASA,EAAK,EAAE,EACrFI,EAAQyB,EAAS,OAAO,GAAG,EAAE,KAAK,QAAS,OAAO,EAAE,KAAK,QAAS7B,EAAK,UAAU,EACvF,IAAI8B,EACA9B,EAAK,YAAc,OACrB8B,EAAY,GAEZA,EAAY,OAAO9B,EAAK,WAAc,SAAWA,EAAK,UAAYA,EAAK,UAAU,CAAC,EAEpF,MAAM+B,EAAW3B,EAAM,OACvB,IAAI4B,EACAhC,EAAK,YAAc,WACrBgC,EAAOC,GACL7B,EACA8B,EAAajB,EAAea,CAAS,EAAGJ,CAAM,EAC9C,CACE,cAAAE,EACA,MAAO5B,EAAK,OAAS0B,EAAO,UAAU,cACtC,QAAS,qBACV,EACDA,CACN,EAEIM,EAAOD,EAAS,YACdT,EAAoBY,EAAajB,EAAea,CAAS,EAAGJ,CAAM,EAAG1B,EAAK,WAAY,GAAOW,CAAM,CACzG,EAEE,IAAIwB,EAAOH,EAAK,UAChB,MAAMI,EAAcpC,EAAK,QAAU,EACnC,GAAIa,EAASa,EAAO,UAAU,UAAU,EAAG,CACzC,MAAMvB,EAAM6B,EAAK,SAAS,CAAC,EACrBK,EAAKC,EAAQN,CAAI,EACjBO,EAASpC,EAAI,qBAAqB,KAAK,EAC7C,GAAIoC,EAAQ,CACV,MAAMC,EAAYV,EAAU,QAAQ,cAAe,EAAE,EAAE,KAAM,IAAK,GAClE,MAAM,QAAQ,IACZ,CAAC,GAAGS,CAAM,EAAE,IACTE,GAAQ,IAAI,QAASC,GAAQ,CAC5B,SAASC,GAAa,CAGpB,GAFAF,EAAI,MAAM,QAAU,OACpBA,EAAI,MAAM,cAAgB,SACtBD,EAAW,CACb,MAAMI,EAAelB,EAAO,SAAWA,EAAO,SAAW,OAAO,iBAAiB,SAAS,IAAI,EAAE,SAE1FmB,EAAQ,SAASD,EAAc,EAAE,EADf,EACqC,KAC7DH,EAAI,MAAM,SAAWI,EACrBJ,EAAI,MAAM,SAAWI,CACrC,MACgBJ,EAAI,MAAM,MAAQ,OAEpBC,EAAID,CAAG,CACR,CACD3C,EAAO6C,EAAY,YAAY,EAC/B,WAAW,IAAM,CACXF,EAAI,UACNE,GAEhB,CAAa,EACDF,EAAI,iBAAiB,QAASE,CAAU,EACxCF,EAAI,iBAAiB,OAAQE,CAAU,CACnD,CAAW,CACF,CACT,CACK,CACDR,EAAOhC,EAAI,wBACXkC,EAAG,KAAK,QAASF,EAAK,KAAK,EAC3BE,EAAG,KAAK,SAAUF,EAAK,MAAM,CAC9B,CACD,OAAIP,EACFxB,EAAM,KAAK,YAAa,aAAe,CAAC+B,EAAK,MAAQ,EAAI,KAAO,CAACA,EAAK,OAAS,EAAI,GAAG,EAEtF/B,EAAM,KAAK,YAAa,gBAAkB,CAAC+B,EAAK,OAAS,EAAI,GAAG,EAE9DnC,EAAK,aACPI,EAAM,KAAK,YAAa,aAAe,CAAC+B,EAAK,MAAQ,EAAI,KAAO,CAACA,EAAK,OAAS,EAAI,GAAG,EAExF/B,EAAM,OAAO,OAAQ,cAAc,EAC5B,CAAE,SAAAyB,EAAU,KAAAM,EAAM,YAAAC,EAAa,MAAAhC,CAAK,CAC7C,EAAG,aAAa,EACZ0C,EAAmChD,EAAO,CAACE,EAAM+C,IAAY,CAC/D,MAAMZ,EAAOY,EAAQ,KAAM,EAAC,QAAO,EACnC/C,EAAK,MAAQmC,EAAK,MAClBnC,EAAK,OAASmC,EAAK,MACrB,EAAG,kBAAkB,EACrB,SAASa,EAAmBxB,EAAQyB,EAAGC,EAAGC,EAAQ,CAChD,OAAO3B,EAAO,OAAO,UAAW,cAAc,EAAE,KAC9C,SACA2B,EAAO,IAAI,SAASC,EAAG,CACrB,OAAOA,EAAE,EAAI,IAAMA,EAAE,CAC3B,CAAK,EAAE,KAAK,GAAG,CACZ,EAAC,KAAK,QAAS,iBAAiB,EAAE,KAAK,YAAa,aAAe,CAACH,EAAI,EAAI,IAAMC,EAAI,EAAI,GAAG,CAChG,CACApD,EAAOkD,EAAoB,oBAAoB,EAM/C,IAAIK,GAAiDvD,EAAQwD,GAAe,CAC1E,MAAMC,EAAmC,IAAI,IAC7C,UAAWC,KAAaF,EACtB,OAAQE,EAAS,CACf,IAAK,IACHD,EAAiB,IAAI,OAAO,EAC5BA,EAAiB,IAAI,MAAM,EAC3B,MACF,IAAK,IACHA,EAAiB,IAAI,IAAI,EACzBA,EAAiB,IAAI,MAAM,EAC3B,MACF,QACEA,EAAiB,IAAIC,CAAS,EAC9B,KACH,CAEH,OAAOD,CACT,EAAG,gCAAgC,EAC/BE,GAAiC3D,EAAO,CAAC4D,EAAsBvB,EAAMnC,IAAS,CAChF,MAAMsD,EAAaD,GAA+BK,CAAoB,EAChEC,EAAI,EACJC,EAASzB,EAAK,OAAS,EAAInC,EAAK,QAChC6D,EAAWD,EAASD,EACpBd,EAAQV,EAAK,MAAQ,EAAI0B,EAAW7D,EAAK,QACzC8D,EAAU9D,EAAK,QAAU,EAC/B,OAAIsD,EAAW,IAAI,OAAO,GAAKA,EAAW,IAAI,MAAM,GAAKA,EAAW,IAAI,IAAI,GAAKA,EAAW,IAAI,MAAM,EAC7F,CAEL,CAAE,EAAG,EAAG,EAAG,CAAG,EACd,CAAE,EAAGO,EAAU,EAAG,CAAG,EACrB,CAAE,EAAGhB,EAAQ,EAAG,EAAG,EAAIiB,CAAS,EAChC,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAAG,EAC7B,CAAE,EAAGhB,EAAO,EAAG,CAAG,EAElB,CAAE,EAAGA,EAAO,EAAG,CAACe,EAAS,CAAG,EAC5B,CAAE,EAAGf,EAAQ,EAAIiB,EAAS,EAAG,CAACF,EAAS,CAAG,EAC1C,CAAE,EAAGf,EAAO,EAAG,GAAKe,EAAS,CAAG,EAChC,CAAE,EAAGf,EAAO,EAAG,CAACe,CAAQ,EAExB,CAAE,EAAGf,EAAQgB,EAAU,EAAG,CAACD,CAAQ,EACnC,CAAE,EAAGf,EAAQ,EAAG,EAAG,CAACe,EAAS,EAAIE,CAAS,EAC1C,CAAE,EAAGD,EAAU,EAAG,CAACD,CAAQ,EAE3B,CAAE,EAAG,EAAG,EAAG,CAACA,CAAQ,EACpB,CAAE,EAAG,EAAG,EAAG,GAAKA,EAAS,CAAG,EAC5B,CAAE,EAAG,GAAKE,EAAS,EAAG,CAACF,EAAS,CAAG,EACnC,CAAE,EAAG,EAAG,EAAG,CAACA,EAAS,CAAG,CAC9B,EAEMN,EAAW,IAAI,OAAO,GAAKA,EAAW,IAAI,MAAM,GAAKA,EAAW,IAAI,IAAI,EACnE,CACL,CAAE,EAAGO,EAAU,EAAG,CAAG,EACrB,CAAE,EAAGhB,EAAQgB,EAAU,EAAG,CAAG,EAC7B,CAAE,EAAGhB,EAAO,EAAG,CAACe,EAAS,CAAG,EAC5B,CAAE,EAAGf,EAAQgB,EAAU,EAAG,CAACD,CAAQ,EACnC,CAAE,EAAGC,EAAU,EAAG,CAACD,CAAQ,EAC3B,CAAE,EAAG,EAAG,EAAG,CAACA,EAAS,CAAG,CAC9B,EAEMN,EAAW,IAAI,OAAO,GAAKA,EAAW,IAAI,MAAM,GAAKA,EAAW,IAAI,MAAM,EACrE,CACL,CAAE,EAAG,EAAG,EAAG,CAAG,EACd,CAAE,EAAGO,EAAU,EAAG,CAACD,CAAQ,EAC3B,CAAE,EAAGf,EAAQgB,EAAU,EAAG,CAACD,CAAQ,EACnC,CAAE,EAAGf,EAAO,EAAG,CAAG,CACxB,EAEMS,EAAW,IAAI,OAAO,GAAKA,EAAW,IAAI,IAAI,GAAKA,EAAW,IAAI,MAAM,EACnE,CACL,CAAE,EAAG,EAAG,EAAG,CAAG,EACd,CAAE,EAAGT,EAAO,EAAG,CAACgB,CAAU,EAC1B,CAAE,EAAGhB,EAAO,EAAG,CAACe,EAASC,CAAU,EACnC,CAAE,EAAG,EAAG,EAAG,CAACD,CAAQ,CAC1B,EAEMN,EAAW,IAAI,MAAM,GAAKA,EAAW,IAAI,IAAI,GAAKA,EAAW,IAAI,MAAM,EAClE,CACL,CAAE,EAAGT,EAAO,EAAG,CAAG,EAClB,CAAE,EAAG,EAAG,EAAG,CAACgB,CAAU,EACtB,CAAE,EAAG,EAAG,EAAG,CAACD,EAASC,CAAU,EAC/B,CAAE,EAAGhB,EAAO,EAAG,CAACe,CAAQ,CAC9B,EAEMN,EAAW,IAAI,OAAO,GAAKA,EAAW,IAAI,MAAM,EAC3C,CACL,CAAE,EAAGO,EAAU,EAAG,CAAG,EACrB,CAAE,EAAGA,EAAU,EAAG,CAACC,CAAS,EAC5B,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAACC,CAAS,EACpC,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAAG,EAC7B,CAAE,EAAGhB,EAAO,EAAG,CAACe,EAAS,CAAG,EAC5B,CAAE,EAAGf,EAAQgB,EAAU,EAAG,CAACD,CAAQ,EACnC,CAAE,EAAGf,EAAQgB,EAAU,EAAG,CAACD,EAASE,CAAS,EAC7C,CAAE,EAAGD,EAAU,EAAG,CAACD,EAASE,CAAS,EACrC,CAAE,EAAGD,EAAU,EAAG,CAACD,CAAQ,EAC3B,CAAE,EAAG,EAAG,EAAG,CAACA,EAAS,CAAG,CAC9B,EAEMN,EAAW,IAAI,IAAI,GAAKA,EAAW,IAAI,MAAM,EACxC,CAEL,CAAE,EAAGT,EAAQ,EAAG,EAAG,CAAG,EAEtB,CAAE,EAAG,EAAG,EAAG,CAACiB,CAAS,EACrB,CAAE,EAAGD,EAAU,EAAG,CAACC,CAAS,EAE5B,CAAE,EAAGD,EAAU,EAAG,CAACD,EAASE,CAAS,EACrC,CAAE,EAAG,EAAG,EAAG,CAACF,EAASE,CAAS,EAE9B,CAAE,EAAGjB,EAAQ,EAAG,EAAG,CAACe,CAAQ,EAC5B,CAAE,EAAGf,EAAO,EAAG,CAACe,EAASE,CAAS,EAElC,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAACD,EAASE,CAAS,EAC7C,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAACC,CAAS,EACpC,CAAE,EAAGjB,EAAO,EAAG,CAACiB,CAAS,CAC/B,EAEMR,EAAW,IAAI,OAAO,GAAKA,EAAW,IAAI,IAAI,EACzC,CACL,CAAE,EAAG,EAAG,EAAG,CAAG,EACd,CAAE,EAAGT,EAAO,EAAG,CAACgB,CAAU,EAC1B,CAAE,EAAG,EAAG,EAAG,CAACD,CAAQ,CAC1B,EAEMN,EAAW,IAAI,OAAO,GAAKA,EAAW,IAAI,MAAM,EAC3C,CACL,CAAE,EAAG,EAAG,EAAG,CAAG,EACd,CAAE,EAAGT,EAAO,EAAG,CAAG,EAClB,CAAE,EAAG,EAAG,EAAG,CAACe,CAAQ,CAC1B,EAEMN,EAAW,IAAI,MAAM,GAAKA,EAAW,IAAI,IAAI,EACxC,CACL,CAAE,EAAGT,EAAO,EAAG,CAAG,EAClB,CAAE,EAAG,EAAG,EAAG,CAACgB,CAAU,EACtB,CAAE,EAAGhB,EAAO,EAAG,CAACe,CAAQ,CAC9B,EAEMN,EAAW,IAAI,MAAM,GAAKA,EAAW,IAAI,MAAM,EAC1C,CACL,CAAE,EAAGT,EAAO,EAAG,CAAG,EAClB,CAAE,EAAG,EAAG,EAAG,CAAG,EACd,CAAE,EAAGA,EAAO,EAAG,CAACe,CAAQ,CAC9B,EAEMN,EAAW,IAAI,OAAO,EACjB,CACL,CAAE,EAAGO,EAAU,EAAG,CAACC,CAAS,EAC5B,CAAE,EAAGD,EAAU,EAAG,CAACC,CAAS,EAC5B,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAACC,CAAS,EACpC,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAAG,EAC7B,CAAE,EAAGhB,EAAO,EAAG,CAACe,EAAS,CAAG,EAC5B,CAAE,EAAGf,EAAQgB,EAAU,EAAG,CAACD,CAAQ,EACnC,CAAE,EAAGf,EAAQgB,EAAU,EAAG,CAACD,EAASE,CAAS,EAE7C,CAAE,EAAGD,EAAU,EAAG,CAACD,EAASE,CAAS,EACrC,CAAE,EAAGD,EAAU,EAAG,CAACD,EAASE,CAAS,CAC3C,EAEMR,EAAW,IAAI,MAAM,EAChB,CACL,CAAE,EAAGO,EAAU,EAAG,CAAG,EACrB,CAAE,EAAGA,EAAU,EAAG,CAACC,CAAS,EAE5B,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAACC,CAAS,EACpC,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAACD,EAASE,CAAS,EAC7C,CAAE,EAAGD,EAAU,EAAG,CAACD,EAASE,CAAS,EACrC,CAAE,EAAGD,EAAU,EAAG,CAACD,CAAQ,EAC3B,CAAE,EAAG,EAAG,EAAG,CAACA,EAAS,CAAG,CAC9B,EAEMN,EAAW,IAAI,IAAI,EACd,CAEL,CAAE,EAAGO,EAAU,EAAG,CAACC,CAAS,EAE5B,CAAE,EAAGD,EAAU,EAAG,CAACD,EAASE,CAAS,EACrC,CAAE,EAAG,EAAG,EAAG,CAACF,EAASE,CAAS,EAE9B,CAAE,EAAGjB,EAAQ,EAAG,EAAG,CAACe,CAAQ,EAC5B,CAAE,EAAGf,EAAO,EAAG,CAACe,EAASE,CAAS,EAElC,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAACD,EAASE,CAAS,EAC7C,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAACC,CAAS,CAC1C,EAEMR,EAAW,IAAI,MAAM,EAChB,CAEL,CAAE,EAAGT,EAAQ,EAAG,EAAG,CAAG,EAEtB,CAAE,EAAG,EAAG,EAAG,CAACiB,CAAS,EACrB,CAAE,EAAGD,EAAU,EAAG,CAACC,CAAS,EAE5B,CAAE,EAAGD,EAAU,EAAG,CAACD,EAASE,CAAS,EACrC,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAACD,EAASE,CAAS,EAC7C,CAAE,EAAGjB,EAAQgB,EAAU,EAAG,CAACC,CAAS,EACpC,CAAE,EAAGjB,EAAO,EAAG,CAACiB,CAAS,CAC/B,EAES,CAAC,CAAE,EAAG,EAAG,EAAG,CAAG,CAAA,CACxB,EAAG,gBAAgB,EAGnB,SAASC,EAAc/D,EAAMgE,EAAO,CAClC,OAAOhE,EAAK,UAAUgE,CAAK,CAC7B,CACAlE,EAAOiE,EAAe,eAAe,EACrC,IAAIE,GAAyBF,EAG7B,SAASG,GAAiBlE,EAAMmE,EAAIC,EAAIJ,EAAO,CAC7C,IAAIK,EAAKrE,EAAK,EACVsE,EAAKtE,EAAK,EACVuE,EAAKF,EAAKL,EAAM,EAChBQ,EAAKF,EAAKN,EAAM,EAChBS,EAAM,KAAK,KAAKN,EAAKA,EAAKK,EAAKA,EAAKJ,EAAKA,EAAKG,EAAKA,CAAE,EACrDG,EAAK,KAAK,IAAIP,EAAKC,EAAKG,EAAKE,CAAG,EAChCT,EAAM,EAAIK,IACZK,EAAK,CAACA,GAER,IAAIC,EAAK,KAAK,IAAIR,EAAKC,EAAKI,EAAKC,CAAG,EACpC,OAAIT,EAAM,EAAIM,IACZK,EAAK,CAACA,GAED,CAAE,EAAGN,EAAKK,EAAI,EAAGJ,EAAKK,EAC/B,CACA7E,EAAOoE,GAAkB,kBAAkB,EAC3C,IAAIU,GAA4BV,GAGhC,SAASW,GAAgB7E,EAAMmE,EAAIH,EAAO,CACxC,OAAOY,GAA0B5E,EAAMmE,EAAIA,EAAIH,CAAK,CACtD,CACAlE,EAAO+E,GAAiB,iBAAiB,EACzC,IAAIC,GAA2BD,GAG/B,SAASE,GAAcC,EAAIC,EAAIC,EAAIC,EAAI,CACrC,IAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACpBC,EAAIC,EAAIC,EAAIC,EACZC,EAAOC,EAAQC,EACfC,EAAGC,EAMP,GALAd,EAAKH,EAAG,EAAID,EAAG,EACfM,EAAKN,EAAG,EAAIC,EAAG,EACfO,EAAKP,EAAG,EAAID,EAAG,EAAIA,EAAG,EAAIC,EAAG,EAC7BW,EAAKR,EAAKF,EAAG,EAAII,EAAKJ,EAAG,EAAIM,EAC7BK,EAAKT,EAAKD,EAAG,EAAIG,EAAKH,EAAG,EAAIK,EACzB,EAAAI,IAAO,GAAKC,IAAO,GAAKM,EAASP,EAAIC,CAAE,KAG3CR,EAAKF,EAAG,EAAID,EAAG,EACfK,EAAKL,EAAG,EAAIC,EAAG,EACfM,EAAKN,EAAG,EAAID,EAAG,EAAIA,EAAG,EAAIC,EAAG,EAC7BO,EAAKL,EAAKL,EAAG,EAAIO,EAAKP,EAAG,EAAIS,EAC7BE,EAAKN,EAAKJ,EAAG,EAAIM,EAAKN,EAAG,EAAIQ,EACzB,EAAAC,IAAO,GAAKC,IAAO,GAAKQ,EAAST,EAAIC,CAAE,KAG3CG,EAAQV,EAAKG,EAAKF,EAAKC,EACnBQ,IAAU,IAGd,OAAAC,EAAS,KAAK,IAAID,EAAQ,CAAC,EAC3BE,EAAMV,EAAKG,EAAKF,EAAKC,EACrBS,EAAID,EAAM,GAAKA,EAAMD,GAAUD,GAASE,EAAMD,GAAUD,EACxDE,EAAMX,EAAKG,EAAKJ,EAAKK,EACrBS,EAAIF,EAAM,GAAKA,EAAMD,GAAUD,GAASE,EAAMD,GAAUD,EACjD,CAAE,EAAAG,EAAG,EAAAC,EACd,CACApG,EAAOiF,GAAe,eAAe,EACrC,SAASoB,EAAST,EAAIC,EAAI,CACxB,OAAOD,EAAKC,EAAK,CACnB,CACA7F,EAAOqG,EAAU,UAAU,EAC3B,IAAIC,GAAyBrB,GAGzBsB,GAA4BC,GAChC,SAASA,GAAiBtG,EAAMuG,EAAYvC,EAAO,CACjD,IAAIwC,EAAKxG,EAAK,EACVyG,EAAKzG,EAAK,EACV0G,EAAgB,CAAA,EAChBC,EAAO,OAAO,kBACdC,EAAO,OAAO,kBACd,OAAOL,EAAW,SAAY,WAChCA,EAAW,QAAQ,SAASM,EAAO,CACjCF,EAAO,KAAK,IAAIA,EAAME,EAAM,CAAC,EAC7BD,EAAO,KAAK,IAAIA,EAAMC,EAAM,CAAC,CACnC,CAAK,GAEDF,EAAO,KAAK,IAAIA,EAAMJ,EAAW,CAAC,EAClCK,EAAO,KAAK,IAAIA,EAAML,EAAW,CAAC,GAIpC,QAFIO,EAAON,EAAKxG,EAAK,MAAQ,EAAI2G,EAC7BI,EAAMN,EAAKzG,EAAK,OAAS,EAAI4G,EACxBI,EAAI,EAAGA,EAAIT,EAAW,OAAQS,IAAK,CAC1C,IAAIhC,EAAKuB,EAAWS,CAAC,EACjB/B,EAAKsB,EAAWS,EAAIT,EAAW,OAAS,EAAIS,EAAI,EAAI,CAAC,EACrDC,EAAYb,GACdpG,EACAgE,EACA,CAAE,EAAG8C,EAAO9B,EAAG,EAAG,EAAG+B,EAAM/B,EAAG,CAAG,EACjC,CAAE,EAAG8B,EAAO7B,EAAG,EAAG,EAAG8B,EAAM9B,EAAG,CAAG,CACvC,EACQgC,GACFP,EAAc,KAAKO,CAAS,CAE/B,CACD,OAAKP,EAAc,QAGfA,EAAc,OAAS,GACzBA,EAAc,KAAK,SAASQ,EAAGC,EAAG,CAChC,IAAIC,EAAMF,EAAE,EAAIlD,EAAM,EAClBqD,EAAMH,EAAE,EAAIlD,EAAM,EAClBsD,EAAQ,KAAK,KAAKF,EAAMA,EAAMC,EAAMA,CAAG,EACvCE,EAAMJ,EAAE,EAAInD,EAAM,EAClBwD,EAAML,EAAE,EAAInD,EAAM,EAClByD,EAAQ,KAAK,KAAKF,EAAMA,EAAMC,EAAMA,CAAG,EAC3C,OAAOF,EAAQG,EAAQ,GAAKH,IAAUG,EAAQ,EAAI,CACxD,CAAK,EAEIf,EAAc,CAAC,GAbb1G,CAcX,CACAF,EAAOwG,GAAkB,kBAAkB,EAG3C,IAAIoB,GAAgC5H,EAAO,CAACE,EAAMgE,IAAU,CAC1D,IAAIiC,EAAIjG,EAAK,EACTkG,EAAIlG,EAAK,EACT0E,EAAKV,EAAM,EAAIiC,EACftB,EAAKX,EAAM,EAAIkC,EACfjD,EAAIjD,EAAK,MAAQ,EACjBkD,EAAIlD,EAAK,OAAS,EAClB2H,EAAIC,EACR,OAAI,KAAK,IAAIjD,CAAE,EAAI1B,EAAI,KAAK,IAAIyB,CAAE,EAAIxB,GAChCyB,EAAK,IACPzB,EAAI,CAACA,GAEPyE,EAAKhD,IAAO,EAAI,EAAIzB,EAAIwB,EAAKC,EAC7BiD,EAAK1E,IAEDwB,EAAK,IACPzB,EAAI,CAACA,GAEP0E,EAAK1E,EACL2E,EAAKlD,IAAO,EAAI,EAAIzB,EAAI0B,EAAKD,GAExB,CAAE,EAAGuB,EAAI0B,EAAI,EAAGzB,EAAI0B,EAC7B,EAAG,eAAe,EACdC,GAAyBH,GAGzBI,EAAoB,CACtB,KAAM7D,GACN,OAAQa,GACR,QAASF,GACT,QAASyB,GACT,KAAMwB,EACR,EAGIE,GAAuBjI,EAAO,MAAO0B,EAAQxB,IAAS,CAClCA,EAAK,eAAiBc,EAAW,EAAC,UAAU,aAEhEd,EAAK,YAAc,IAErB,KAAM,CAAE,SAAA6B,EAAU,KAAAM,EAAM,YAAAC,CAAW,EAAK,MAAMb,EAC5CC,EACAxB,EACA,QAAUA,EAAK,QACf,EACJ,EACEe,EAAI,KAAK,aAAcf,EAAK,OAAO,EACnC,MAAMgI,EAAQnG,EAAS,OAAO,OAAQ,cAAc,EACpD,OAAAmG,EAAM,KAAK,KAAMhI,EAAK,EAAE,EAAE,KAAK,KAAMA,EAAK,EAAE,EAAE,KAAK,IAAK,CAACmC,EAAK,MAAQ,EAAIC,CAAW,EAAE,KAAK,IAAK,CAACD,EAAK,OAAS,EAAIC,CAAW,EAAE,KAAK,QAASD,EAAK,MAAQnC,EAAK,OAAO,EAAE,KAAK,SAAUmC,EAAK,OAASnC,EAAK,OAAO,EACnN8C,EAAiB9C,EAAMgI,CAAK,EAC5BhI,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,KAAK9H,EAAMgE,CAAK,CAC7C,EACSnC,CACT,EAAG,MAAM,EACLoG,GAAeF,GAGfG,EAA8BpI,EAAQqI,GACpCA,EACK,IAAMA,EAER,GACN,aAAa,EACZC,EAAqCtI,EAAO,CAACE,EAAMqI,IAC9C,GAAGA,UAA8B,gBAAiBH,OAAAA,EAAYlI,EAAK,OAAO,EAAC,KAAIkI,OAAAA,EACpFlI,EAAK,KACN,GACA,oBAAoB,EACnBsI,EAA2BxI,EAAO,MAAO0B,EAAQxB,IAAS,CAC5D,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAM,EAAG,MAAMZ,EAC/BC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQiD,EAAId,EAAK,MAAQnC,EAAK,QACtBkD,EAAIf,EAAK,OAASnC,EAAK,QACvBuI,EAAItF,EAAIC,EACRC,EAAS,CACb,CAAE,EAAGoF,EAAI,EAAG,EAAG,CAAG,EAClB,CAAE,EAAGA,EAAG,EAAG,CAACA,EAAI,CAAG,EACnB,CAAE,EAAGA,EAAI,EAAG,EAAG,CAACA,CAAG,EACnB,CAAE,EAAG,EAAG,EAAG,CAACA,EAAI,CAAG,CACvB,EACExH,EAAI,KAAK,wBAAwB,EACjC,MAAMyH,EAAexF,EAAmBnB,EAAU0G,EAAGA,EAAGpF,CAAM,EAC9D,OAAAqF,EAAa,KAAK,QAASxI,EAAK,KAAK,EACrC8C,EAAiB9C,EAAMwI,CAAY,EACnCxI,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAAjD,EAAI,KAAK,kBAAkB,EACpB+G,EAAkB,QAAQ9H,EAAMmD,EAAQa,CAAK,CACxD,EACSnC,CACT,EAAG,UAAU,EACT4G,GAAyB3I,EAAO,CAAC0B,EAAQxB,IAAS,CACpD,MAAM6B,EAAWL,EAAO,OAAO,GAAG,EAAE,KAAK,QAAS,cAAc,EAAE,KAAK,KAAMxB,EAAK,OAASA,EAAK,EAAE,EAC5FuI,EAAI,GACJpF,EAAS,CACb,CAAE,EAAG,EAAG,EAAGoF,EAAI,CAAG,EAClB,CAAE,EAAGA,EAAI,EAAG,EAAG,CAAG,EAClB,CAAE,EAAG,EAAG,EAAG,CAACA,EAAI,CAAG,EACnB,CAAE,EAAG,CAACA,EAAI,EAAG,EAAG,CAAG,CACvB,EAOE,OANgB1G,EAAS,OAAO,UAAW,cAAc,EAAE,KACzD,SACAsB,EAAO,IAAI,SAASC,EAAG,CACrB,OAAOA,EAAE,EAAI,IAAMA,EAAE,CAC3B,CAAK,EAAE,KAAK,GAAG,CACf,EACU,KAAK,QAAS,aAAa,EAAE,KAAK,IAAK,CAAC,EAAE,KAAK,QAAS,EAAE,EAAE,KAAK,SAAU,EAAE,EACrFpD,EAAK,MAAQ,GACbA,EAAK,OAAS,GACdA,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,OAAO9H,EAAM,GAAIgE,CAAK,CACnD,EACSnC,CACT,EAAG,QAAQ,EACP6G,GAA0B5I,EAAO,MAAO0B,EAAQxB,IAAS,CAC3D,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAM,EAAG,MAAMZ,EAC/BC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQ2D,EAAI,EACJT,EAAIf,EAAK,OAASnC,EAAK,QACvB2I,EAAIzF,EAAIS,EACRV,EAAId,EAAK,MAAQ,EAAIwG,EAAI3I,EAAK,QAC9BmD,EAAS,CACb,CAAE,EAAGwF,EAAG,EAAG,CAAG,EACd,CAAE,EAAG1F,EAAI0F,EAAG,EAAG,CAAG,EAClB,CAAE,EAAG1F,EAAG,EAAG,CAACC,EAAI,CAAG,EACnB,CAAE,EAAGD,EAAI0F,EAAG,EAAG,CAACzF,CAAG,EACnB,CAAE,EAAGyF,EAAG,EAAG,CAACzF,CAAG,EACf,CAAE,EAAG,EAAG,EAAG,CAACA,EAAI,CAAG,CACvB,EACQ0F,EAAM5F,EAAmBnB,EAAUoB,EAAGC,EAAGC,CAAM,EACrD,OAAAyF,EAAI,KAAK,QAAS5I,EAAK,KAAK,EAC5B8C,EAAiB9C,EAAM4I,CAAG,EAC1B5I,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,QAAQ9H,EAAMmD,EAAQa,CAAK,CACxD,EACSnC,CACT,EAAG,SAAS,EACRgH,GAA8B/I,EAAO,MAAO0B,EAAQxB,IAAS,CAC/D,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAI,EAAK,MAAMZ,EAAYC,EAAQxB,EAAM,OAAQ,EAAI,EACjE2D,EAAI,EACJT,EAAIf,EAAK,OAAS,EAAInC,EAAK,QAC3B2I,EAAIzF,EAAIS,EACRV,EAAId,EAAK,MAAQ,EAAIwG,EAAI3I,EAAK,QAC9BmD,EAASM,GAAezD,EAAK,WAAYmC,EAAMnC,CAAI,EACnD8I,EAAa9F,EAAmBnB,EAAUoB,EAAGC,EAAGC,CAAM,EAC5D,OAAA2F,EAAW,KAAK,QAAS9I,EAAK,KAAK,EACnC8C,EAAiB9C,EAAM8I,CAAU,EACjC9I,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,QAAQ9H,EAAMmD,EAAQa,CAAK,CACxD,EACSnC,CACT,EAAG,aAAa,EACZkH,GAAsCjJ,EAAO,MAAO0B,EAAQxB,IAAS,CACvE,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAM,EAAG,MAAMZ,EAC/BC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQiD,EAAId,EAAK,MAAQnC,EAAK,QACtBkD,EAAIf,EAAK,OAASnC,EAAK,QACvBmD,EAAS,CACb,CAAE,EAAG,CAACD,EAAI,EAAG,EAAG,CAAG,EACnB,CAAE,EAAGD,EAAG,EAAG,CAAG,EACd,CAAE,EAAGA,EAAG,EAAG,CAACC,CAAG,EACf,CAAE,EAAG,CAACA,EAAI,EAAG,EAAG,CAACA,CAAG,EACpB,CAAE,EAAG,EAAG,EAAG,CAACA,EAAI,CAAG,CACvB,EAEE,OADWF,EAAmBnB,EAAUoB,EAAGC,EAAGC,CAAM,EACjD,KAAK,QAASnD,EAAK,KAAK,EAC3BA,EAAK,MAAQiD,EAAIC,EACjBlD,EAAK,OAASkD,EACdlD,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,QAAQ9H,EAAMmD,EAAQa,CAAK,CACxD,EACSnC,CACT,EAAG,qBAAqB,EACpBmH,GAA6BlJ,EAAO,MAAO0B,EAAQxB,IAAS,CAC9D,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAM,EAAG,MAAMZ,EAAYC,EAAQxB,EAAMoI,EAAmBpI,CAAI,EAAG,EAAI,EACnFiD,EAAId,EAAK,MAAQnC,EAAK,QACtBkD,EAAIf,EAAK,OAASnC,EAAK,QACvBmD,EAAS,CACb,CAAE,EAAG,GAAKD,EAAI,EAAG,EAAG,CAAG,EACvB,CAAE,EAAGD,EAAIC,EAAI,EAAG,EAAG,CAAG,EACtB,CAAE,EAAGD,EAAI,EAAIC,EAAI,EAAG,EAAG,CAACA,CAAG,EAC3B,CAAE,EAAGA,EAAI,EAAG,EAAG,CAACA,CAAG,CACvB,EACQ+F,EAAKjG,EAAmBnB,EAAUoB,EAAGC,EAAGC,CAAM,EACpD,OAAA8F,EAAG,KAAK,QAASjJ,EAAK,KAAK,EAC3B8C,EAAiB9C,EAAMiJ,CAAE,EACzBjJ,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,QAAQ9H,EAAMmD,EAAQa,CAAK,CACxD,EACSnC,CACT,EAAG,YAAY,EACXqH,GAA4BpJ,EAAO,MAAO0B,EAAQxB,IAAS,CAC7D,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAM,EAAG,MAAMZ,EAC/BC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQiD,EAAId,EAAK,MAAQnC,EAAK,QACtBkD,EAAIf,EAAK,OAASnC,EAAK,QACvBmD,EAAS,CACb,CAAE,EAAG,EAAID,EAAI,EAAG,EAAG,CAAG,EACtB,CAAE,EAAGD,EAAIC,EAAI,EAAG,EAAG,CAAG,EACtB,CAAE,EAAGD,EAAI,EAAIC,EAAI,EAAG,EAAG,CAACA,CAAG,EAC3B,CAAE,EAAG,CAACA,EAAI,EAAG,EAAG,CAACA,CAAG,CACxB,EACQ+F,EAAKjG,EAAmBnB,EAAUoB,EAAGC,EAAGC,CAAM,EACpD,OAAA8F,EAAG,KAAK,QAASjJ,EAAK,KAAK,EAC3B8C,EAAiB9C,EAAMiJ,CAAE,EACzBjJ,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,QAAQ9H,EAAMmD,EAAQa,CAAK,CACxD,EACSnC,CACT,EAAG,WAAW,EACVsH,GAA4BrJ,EAAO,MAAO0B,EAAQxB,IAAS,CAC7D,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAM,EAAG,MAAMZ,EAC/BC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQiD,EAAId,EAAK,MAAQnC,EAAK,QACtBkD,EAAIf,EAAK,OAASnC,EAAK,QACvBmD,EAAS,CACb,CAAE,EAAG,GAAKD,EAAI,EAAG,EAAG,CAAG,EACvB,CAAE,EAAGD,EAAI,EAAIC,EAAI,EAAG,EAAG,CAAG,EAC1B,CAAE,EAAGD,EAAIC,EAAI,EAAG,EAAG,CAACA,CAAG,EACvB,CAAE,EAAGA,EAAI,EAAG,EAAG,CAACA,CAAG,CACvB,EACQ+F,EAAKjG,EAAmBnB,EAAUoB,EAAGC,EAAGC,CAAM,EACpD,OAAA8F,EAAG,KAAK,QAASjJ,EAAK,KAAK,EAC3B8C,EAAiB9C,EAAMiJ,CAAE,EACzBjJ,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,QAAQ9H,EAAMmD,EAAQa,CAAK,CACxD,EACSnC,CACT,EAAG,WAAW,EACVuH,GAAgCtJ,EAAO,MAAO0B,EAAQxB,IAAS,CACjE,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAM,EAAG,MAAMZ,EAC/BC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQiD,EAAId,EAAK,MAAQnC,EAAK,QACtBkD,EAAIf,EAAK,OAASnC,EAAK,QACvBmD,EAAS,CACb,CAAE,EAAGD,EAAI,EAAG,EAAG,CAAG,EAClB,CAAE,EAAGD,EAAIC,EAAI,EAAG,EAAG,CAAG,EACtB,CAAE,EAAGD,EAAI,EAAIC,EAAI,EAAG,EAAG,CAACA,CAAG,EAC3B,CAAE,EAAG,GAAKA,EAAI,EAAG,EAAG,CAACA,CAAG,CAC5B,EACQ+F,EAAKjG,EAAmBnB,EAAUoB,EAAGC,EAAGC,CAAM,EACpD,OAAA8F,EAAG,KAAK,QAASjJ,EAAK,KAAK,EAC3B8C,EAAiB9C,EAAMiJ,CAAE,EACzBjJ,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,QAAQ9H,EAAMmD,EAAQa,CAAK,CACxD,EACSnC,CACT,EAAG,eAAe,EACdwH,GAAuCvJ,EAAO,MAAO0B,EAAQxB,IAAS,CACxE,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAM,EAAG,MAAMZ,EAC/BC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQiD,EAAId,EAAK,MAAQnC,EAAK,QACtBkD,EAAIf,EAAK,OAASnC,EAAK,QACvBmD,EAAS,CACb,CAAE,EAAG,EAAG,EAAG,CAAG,EACd,CAAE,EAAGF,EAAIC,EAAI,EAAG,EAAG,CAAG,EACtB,CAAE,EAAGD,EAAG,EAAG,CAACC,EAAI,CAAG,EACnB,CAAE,EAAGD,EAAIC,EAAI,EAAG,EAAG,CAACA,CAAG,EACvB,CAAE,EAAG,EAAG,EAAG,CAACA,CAAG,CACnB,EACQ+F,EAAKjG,EAAmBnB,EAAUoB,EAAGC,EAAGC,CAAM,EACpD,OAAA8F,EAAG,KAAK,QAASjJ,EAAK,KAAK,EAC3B8C,EAAiB9C,EAAMiJ,CAAE,EACzBjJ,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,QAAQ9H,EAAMmD,EAAQa,CAAK,CACxD,EACSnC,CACT,EAAG,sBAAsB,EACrByH,GAA2BxJ,EAAO,MAAO0B,EAAQxB,IAAS,CAC5D,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAM,EAAG,MAAMZ,EAC/BC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQiD,EAAId,EAAK,MAAQnC,EAAK,QACtBmE,EAAKlB,EAAI,EACTmB,EAAKD,GAAM,IAAMlB,EAAI,IACrBC,EAAIf,EAAK,OAASiC,EAAKpE,EAAK,QAC5BuJ,EAAQ,OAASnF,EAAK,MAAQD,EAAK,IAAMC,EAAK,UAAYnB,EAAI,QAAUkB,EAAK,IAAMC,EAAK,UAAY,CAACnB,EAAI,UAAYC,EAAI,MAAQiB,EAAK,IAAMC,EAAK,UAAYnB,EAAI,UAAY,CAACC,EAC9K+F,EAAKpH,EAAS,KAAK,iBAAkBuC,CAAE,EAAE,OAAO,OAAQ,cAAc,EAAE,KAAK,QAASpE,EAAK,KAAK,EAAE,KAAK,IAAKuJ,CAAK,EAAE,KAAK,YAAa,aAAe,CAACtG,EAAI,EAAI,IAAM,EAAEC,EAAI,EAAIkB,GAAM,GAAG,EAC5L,OAAAtB,EAAiB9C,EAAMiJ,CAAE,EACzBjJ,EAAK,UAAY,SAASgE,EAAO,CAC/B,MAAMwF,EAAM1B,EAAkB,KAAK9H,EAAMgE,CAAK,EACxCiC,EAAIuD,EAAI,EAAIxJ,EAAK,EACvB,GAAImE,GAAM,IAAM,KAAK,IAAI8B,CAAC,EAAIjG,EAAK,MAAQ,GAAK,KAAK,IAAIiG,CAAC,GAAKjG,EAAK,MAAQ,GAAK,KAAK,IAAIwJ,EAAI,EAAIxJ,EAAK,CAAC,EAAIA,EAAK,OAAS,EAAIoE,GAAK,CACjI,IAAI8B,EAAI9B,EAAKA,GAAM,EAAI6B,EAAIA,GAAK9B,EAAKA,IACjC+B,GAAK,IACPA,EAAI,KAAK,KAAKA,CAAC,GAEjBA,EAAI9B,EAAK8B,EACLlC,EAAM,EAAIhE,EAAK,EAAI,IACrBkG,EAAI,CAACA,GAEPsD,EAAI,GAAKtD,CACV,CACD,OAAOsD,CACX,EACS3H,CACT,EAAG,UAAU,EACT4H,GAAuB3J,EAAO,MAAO0B,EAAQxB,IAAS,CACxD,KAAM,CAAE,SAAA6B,EAAU,KAAAM,EAAM,YAAAC,CAAW,EAAK,MAAMb,EAC5CC,EACAxB,EACA,QAAUA,EAAK,QAAU,IAAMA,EAAK,MACpC,EACJ,EACQgI,EAAQnG,EAAS,OAAO,OAAQ,cAAc,EAC9C6H,EAAa1J,EAAK,WAAaA,EAAK,MAAQmC,EAAK,MAAQnC,EAAK,QAC9D2J,EAAc3J,EAAK,WAAaA,EAAK,OAASmC,EAAK,OAASnC,EAAK,QACjEiG,EAAIjG,EAAK,WAAa,CAAC0J,EAAa,EAAI,CAACvH,EAAK,MAAQ,EAAIC,EAC1D8D,EAAIlG,EAAK,WAAa,CAAC2J,EAAc,EAAI,CAACxH,EAAK,OAAS,EAAIC,EAElE,GADA4F,EAAM,KAAK,QAAS,uBAAuB,EAAE,KAAK,QAAShI,EAAK,KAAK,EAAE,KAAK,KAAMA,EAAK,EAAE,EAAE,KAAK,KAAMA,EAAK,EAAE,EAAE,KAAK,IAAKiG,CAAC,EAAE,KAAK,IAAKC,CAAC,EAAE,KAAK,QAASwD,CAAU,EAAE,KAAK,SAAUC,CAAW,EACzL3J,EAAK,MAAO,CACd,MAAM4J,EAAW,IAAI,IAAI,OAAO,KAAK5J,EAAK,KAAK,CAAC,EAC5CA,EAAK,MAAM,UACb6J,EAAyB7B,EAAOhI,EAAK,MAAM,QAAS0J,EAAYC,CAAW,EAC3EC,EAAS,OAAO,SAAS,GAE3BA,EAAS,QAASE,GAAY,CAC5B/I,EAAI,KAAK,yBAAyB+I,OAAAA,EAAS,CACjD,CAAK,CACF,CACD,OAAAhH,EAAiB9C,EAAMgI,CAAK,EAC5BhI,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,KAAK9H,EAAMgE,CAAK,CAC7C,EACSnC,CACT,EAAG,MAAM,EACLkI,GAA4BjK,EAAO,MAAO0B,EAAQxB,IAAS,CAC7D,KAAM,CAAE,SAAA6B,EAAU,KAAAM,EAAM,YAAAC,CAAW,EAAK,MAAMb,EAC5CC,EACAxB,EACA,QAAUA,EAAK,QACf,EACJ,EACQgI,EAAQnG,EAAS,OAAO,OAAQ,cAAc,EAC9C6H,EAAa1J,EAAK,WAAaA,EAAK,MAAQmC,EAAK,MAAQnC,EAAK,QAC9D2J,EAAc3J,EAAK,WAAaA,EAAK,OAASmC,EAAK,OAASnC,EAAK,QACjEiG,EAAIjG,EAAK,WAAa,CAAC0J,EAAa,EAAI,CAACvH,EAAK,MAAQ,EAAIC,EAC1D8D,EAAIlG,EAAK,WAAa,CAAC2J,EAAc,EAAI,CAACxH,EAAK,OAAS,EAAIC,EAElE,GADA4F,EAAM,KAAK,QAAS,yCAAyC,EAAE,KAAK,QAAShI,EAAK,KAAK,EAAE,KAAK,KAAMA,EAAK,EAAE,EAAE,KAAK,KAAMA,EAAK,EAAE,EAAE,KAAK,IAAKiG,CAAC,EAAE,KAAK,IAAKC,CAAC,EAAE,KAAK,QAASwD,CAAU,EAAE,KAAK,SAAUC,CAAW,EAC3M3J,EAAK,MAAO,CACd,MAAM4J,EAAW,IAAI,IAAI,OAAO,KAAK5J,EAAK,KAAK,CAAC,EAC5CA,EAAK,MAAM,UACb6J,EAAyB7B,EAAOhI,EAAK,MAAM,QAAS0J,EAAYC,CAAW,EAC3EC,EAAS,OAAO,SAAS,GAE3BA,EAAS,QAASE,GAAY,CAC5B/I,EAAI,KAAK,yBAAyB+I,OAAAA,EAAS,CACjD,CAAK,CACF,CACD,OAAAhH,EAAiB9C,EAAMgI,CAAK,EAC5BhI,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,KAAK9H,EAAMgE,CAAK,CAC7C,EACSnC,CACT,EAAG,WAAW,EACVmI,GAA4BlK,EAAO,MAAO0B,EAAQxB,IAAS,CAC7D,KAAM,CAAE,SAAA6B,CAAU,EAAG,MAAMN,EAAYC,EAAQxB,EAAM,QAAS,EAAI,EAClEe,EAAI,MAAM,aAAcf,EAAK,KAAK,EAClC,MAAMgI,EAAQnG,EAAS,OAAO,OAAQ,cAAc,EAC9C6H,EAAa,EACbC,EAAc,EAGpB,GAFA3B,EAAM,KAAK,QAAS0B,CAAU,EAAE,KAAK,SAAUC,CAAW,EAC1D9H,EAAS,KAAK,QAAS,iBAAiB,EACpC7B,EAAK,MAAO,CACd,MAAM4J,EAAW,IAAI,IAAI,OAAO,KAAK5J,EAAK,KAAK,CAAC,EAC5CA,EAAK,MAAM,UACb6J,EAAyB7B,EAAOhI,EAAK,MAAM,QAAS0J,EAAYC,CAAW,EAC3EC,EAAS,OAAO,SAAS,GAE3BA,EAAS,QAASE,GAAY,CAC5B/I,EAAI,KAAK,yBAAyB+I,OAAAA,EAAS,CACjD,CAAK,CACF,CACD,OAAAhH,EAAiB9C,EAAMgI,CAAK,EAC5BhI,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,KAAK9H,EAAMgE,CAAK,CAC7C,EACSnC,CACT,EAAG,WAAW,EACd,SAASgI,EAAyB7B,EAAOiC,EAASP,EAAYC,EAAa,CACzE,MAAMO,EAAkB,CAAA,EAClBC,EAA4BrK,EAAQsK,GAAW,CACnDF,EAAgB,KAAKE,EAAQ,CAAC,CAC/B,EAAE,WAAW,EACRC,EAA6BvK,EAAQsK,GAAW,CACpDF,EAAgB,KAAK,EAAGE,CAAM,CAC/B,EAAE,YAAY,EACXH,EAAQ,SAAS,GAAG,GACtBlJ,EAAI,MAAM,gBAAgB,EAC1BoJ,EAAUT,CAAU,GAEpBW,EAAWX,CAAU,EAEnBO,EAAQ,SAAS,GAAG,GACtBlJ,EAAI,MAAM,kBAAkB,EAC5BoJ,EAAUR,CAAW,GAErBU,EAAWV,CAAW,EAEpBM,EAAQ,SAAS,GAAG,GACtBlJ,EAAI,MAAM,mBAAmB,EAC7BoJ,EAAUT,CAAU,GAEpBW,EAAWX,CAAU,EAEnBO,EAAQ,SAAS,GAAG,GACtBlJ,EAAI,MAAM,iBAAiB,EAC3BoJ,EAAUR,CAAW,GAErBU,EAAWV,CAAW,EAExB3B,EAAM,KAAK,mBAAoBkC,EAAgB,KAAK,GAAG,CAAC,CAC1D,CACApK,EAAO+J,EAA0B,0BAA0B,EAC3D,IAAIS,GAAgCxK,EAAO,CAAC0B,EAAQxB,IAAS,CAC3D,IAAI2B,EACC3B,EAAK,QAGR2B,EAAU,QAAU3B,EAAK,QAFzB2B,EAAU,eAIZ,MAAME,EAAWL,EAAO,OAAO,GAAG,EAAE,KAAK,QAASG,CAAO,EAAE,KAAK,KAAM3B,EAAK,OAASA,EAAK,EAAE,EACrFgI,EAAQnG,EAAS,OAAO,OAAQ,cAAc,EAC9C0I,EAAY1I,EAAS,OAAO,MAAM,EAClCzB,EAAQyB,EAAS,OAAO,GAAG,EAAE,KAAK,QAAS,OAAO,EAClD2I,EAAQxK,EAAK,UAAU,KAAOA,EAAK,UAAU,KAAI,EAAKA,EAAK,UACjE,IAAIyK,EAAQ,GACR,OAAOD,GAAU,SACnBC,EAAQD,EAAM,CAAC,EAEfC,EAAQD,EAEVzJ,EAAI,KAAK,mBAAoB0J,EAAOD,EAAO,OAAOA,GAAU,QAAQ,EACpE,MAAMxI,EAAO5B,EAAM,KAAI,EAAG,YAAYkB,EAAoBmJ,EAAOzK,EAAK,WAAY,GAAM,EAAI,CAAC,EAC7F,IAAImC,EAAO,CAAE,MAAO,EAAG,OAAQ,CAAC,EAChC,GAAItB,EAASC,EAAS,EAAG,UAAU,UAAU,EAAG,CAC9C,MAAMX,EAAM6B,EAAK,SAAS,CAAC,EACrBK,EAAKqI,EAAQ1I,CAAI,EACvBG,EAAOhC,EAAI,wBACXkC,EAAG,KAAK,QAASF,EAAK,KAAK,EAC3BE,EAAG,KAAK,SAAUF,EAAK,MAAM,CAC9B,CACDpB,EAAI,KAAK,SAAUyJ,CAAK,EACxB,MAAMG,EAAWH,EAAM,MAAM,EAAGA,EAAM,MAAM,EAC5C,IAAII,EAAW5I,EAAK,UACpB,MAAM6I,EAAQzK,EAAM,KAAI,EAAG,YACzBkB,EAAoBqJ,EAAS,KAAOA,EAAS,KAAK,OAAO,EAAIA,EAAU3K,EAAK,WAAY,GAAM,EAAI,CACtG,EACE,GAAIa,EAASC,EAAS,EAAG,UAAU,UAAU,EAAG,CAC9C,MAAMX,EAAM0K,EAAM,SAAS,CAAC,EACtBxI,EAAKqI,EAAQG,CAAK,EACxB1I,EAAOhC,EAAI,wBACXkC,EAAG,KAAK,QAASF,EAAK,KAAK,EAC3BE,EAAG,KAAK,SAAUF,EAAK,MAAM,CAC9B,CACD,MAAMC,EAAcpC,EAAK,QAAU,EACnC0K,OAAAA,EAAQG,CAAK,EAAE,KACb,YACA,eACC1I,EAAK,MAAQyI,EAAS,MAAQ,GAAKA,EAAS,MAAQzI,EAAK,OAAS,GAAK,MAAQyI,EAAS,OAASxI,EAAc,GAAK,GACzH,EACEsI,EAAQ1I,CAAI,EAAE,KACZ,YACA,eACCG,EAAK,MAAQyI,EAAS,MAAQ,EAAI,EAAEA,EAAS,MAAQzI,EAAK,OAAS,GAAK,MAC7E,EACEA,EAAO/B,EAAM,KAAM,EAAC,QAAO,EAC3BA,EAAM,KACJ,YACA,aAAe,CAAC+B,EAAK,MAAQ,EAAI,MAAQ,CAACA,EAAK,OAAS,EAAIC,EAAc,GAAK,GACnF,EACE4F,EAAM,KAAK,QAAS,mBAAmB,EAAE,KAAK,IAAK,CAAC7F,EAAK,MAAQ,EAAIC,CAAW,EAAE,KAAK,IAAK,CAACD,EAAK,OAAS,EAAIC,CAAW,EAAE,KAAK,QAASD,EAAK,MAAQnC,EAAK,OAAO,EAAE,KAAK,SAAUmC,EAAK,OAASnC,EAAK,OAAO,EAC9MuK,EAAU,KAAK,QAAS,SAAS,EAAE,KAAK,KAAM,CAACpI,EAAK,MAAQ,EAAIC,CAAW,EAAE,KAAK,KAAMD,EAAK,MAAQ,EAAIC,CAAW,EAAE,KAAK,KAAM,CAACD,EAAK,OAAS,EAAIC,EAAcwI,EAAS,OAASxI,CAAW,EAAE,KAAK,KAAM,CAACD,EAAK,OAAS,EAAIC,EAAcwI,EAAS,OAASxI,CAAW,EAC1QU,EAAiB9C,EAAMgI,CAAK,EAC5BhI,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,KAAK9H,EAAMgE,CAAK,CAC7C,EACSnC,CACT,EAAG,eAAe,EACdiJ,GAA0BhL,EAAO,MAAO0B,EAAQxB,IAAS,CAC3D,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAM,EAAG,MAAMZ,EAC/BC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQkD,EAAIf,EAAK,OAASnC,EAAK,QACvBiD,EAAId,EAAK,MAAQe,EAAI,EAAIlD,EAAK,QAC9BgI,EAAQnG,EAAS,OAAO,OAAQ,cAAc,EAAE,KAAK,QAAS7B,EAAK,KAAK,EAAE,KAAK,KAAMkD,EAAI,CAAC,EAAE,KAAK,KAAMA,EAAI,CAAC,EAAE,KAAK,IAAK,CAACD,EAAI,CAAC,EAAE,KAAK,IAAK,CAACC,EAAI,CAAC,EAAE,KAAK,QAASD,CAAC,EAAE,KAAK,SAAUC,CAAC,EACzL,OAAAJ,EAAiB9C,EAAMgI,CAAK,EAC5BhI,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,KAAK9H,EAAMgE,CAAK,CAC7C,EACSnC,CACT,EAAG,SAAS,EACRkJ,GAAyBjL,EAAO,MAAO0B,EAAQxB,IAAS,CAC1D,KAAM,CAAE,SAAA6B,EAAU,KAAAM,EAAM,YAAAC,CAAW,EAAK,MAAMb,EAC5CC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQgL,EAAUnJ,EAAS,OAAO,SAAU,cAAc,EACxD,OAAAmJ,EAAQ,KAAK,QAAShL,EAAK,KAAK,EAAE,KAAK,KAAMA,EAAK,EAAE,EAAE,KAAK,KAAMA,EAAK,EAAE,EAAE,KAAK,IAAKmC,EAAK,MAAQ,EAAIC,CAAW,EAAE,KAAK,QAASD,EAAK,MAAQnC,EAAK,OAAO,EAAE,KAAK,SAAUmC,EAAK,OAASnC,EAAK,OAAO,EACpMe,EAAI,KAAK,aAAa,EACtB+B,EAAiB9C,EAAMgL,CAAO,EAC9BhL,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAAjD,EAAI,KAAK,mBAAoBf,EAAMmC,EAAK,MAAQ,EAAIC,EAAa4B,CAAK,EAC/D8D,EAAkB,OAAO9H,EAAMmC,EAAK,MAAQ,EAAIC,EAAa4B,CAAK,CAC7E,EACSnC,CACT,EAAG,QAAQ,EACPoJ,GAA+BnL,EAAO,MAAO0B,EAAQxB,IAAS,CAChE,KAAM,CAAE,SAAA6B,EAAU,KAAAM,EAAM,YAAAC,CAAW,EAAK,MAAMb,EAC5CC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQkL,EAAM,EACNC,EAActJ,EAAS,OAAO,IAAK,cAAc,EACjDuJ,EAAcD,EAAY,OAAO,QAAQ,EACzCE,EAAcF,EAAY,OAAO,QAAQ,EAC/C,OAAAA,EAAY,KAAK,QAASnL,EAAK,KAAK,EACpCoL,EAAY,KAAK,QAASpL,EAAK,KAAK,EAAE,KAAK,KAAMA,EAAK,EAAE,EAAE,KAAK,KAAMA,EAAK,EAAE,EAAE,KAAK,IAAKmC,EAAK,MAAQ,EAAIC,EAAc8I,CAAG,EAAE,KAAK,QAAS/I,EAAK,MAAQnC,EAAK,QAAUkL,EAAM,CAAC,EAAE,KAAK,SAAU/I,EAAK,OAASnC,EAAK,QAAUkL,EAAM,CAAC,EAClOG,EAAY,KAAK,QAASrL,EAAK,KAAK,EAAE,KAAK,KAAMA,EAAK,EAAE,EAAE,KAAK,KAAMA,EAAK,EAAE,EAAE,KAAK,IAAKmC,EAAK,MAAQ,EAAIC,CAAW,EAAE,KAAK,QAASD,EAAK,MAAQnC,EAAK,OAAO,EAAE,KAAK,SAAUmC,EAAK,OAASnC,EAAK,OAAO,EACxMe,EAAI,KAAK,mBAAmB,EAC5B+B,EAAiB9C,EAAMoL,CAAW,EAClCpL,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAAjD,EAAI,KAAK,yBAA0Bf,EAAMmC,EAAK,MAAQ,EAAIC,EAAc8I,EAAKlH,CAAK,EAC3E8D,EAAkB,OAAO9H,EAAMmC,EAAK,MAAQ,EAAIC,EAAc8I,EAAKlH,CAAK,CACnF,EACSnC,CACT,EAAG,cAAc,EACbyJ,GAA6BxL,EAAO,MAAO0B,EAAQxB,IAAS,CAC9D,KAAM,CAAE,SAAA6B,EAAU,KAAAM,CAAM,EAAG,MAAMZ,EAC/BC,EACAxB,EACAoI,EAAmBpI,EAAM,MAAM,EAC/B,EACJ,EACQiD,EAAId,EAAK,MAAQnC,EAAK,QACtBkD,EAAIf,EAAK,OAASnC,EAAK,QACvBmD,EAAS,CACb,CAAE,EAAG,EAAG,EAAG,CAAG,EACd,CAAE,EAAGF,EAAG,EAAG,CAAG,EACd,CAAE,EAAGA,EAAG,EAAG,CAACC,CAAG,EACf,CAAE,EAAG,EAAG,EAAG,CAACA,CAAG,EACf,CAAE,EAAG,EAAG,EAAG,CAAG,EACd,CAAE,EAAG,GAAI,EAAG,CAAG,EACf,CAAE,EAAGD,EAAI,EAAG,EAAG,CAAG,EAClB,CAAE,EAAGA,EAAI,EAAG,EAAG,CAACC,CAAG,EACnB,CAAE,EAAG,GAAI,EAAG,CAACA,CAAG,EAChB,CAAE,EAAG,GAAI,EAAG,CAAG,CACnB,EACQ+F,EAAKjG,EAAmBnB,EAAUoB,EAAGC,EAAGC,CAAM,EACpD,OAAA8F,EAAG,KAAK,QAASjJ,EAAK,KAAK,EAC3B8C,EAAiB9C,EAAMiJ,CAAE,EACzBjJ,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,QAAQ9H,EAAMmD,EAAQa,CAAK,CACxD,EACSnC,CACT,EAAG,YAAY,EACX0J,GAAwBzL,EAAO,CAAC0B,EAAQxB,IAAS,CACnD,MAAM6B,EAAWL,EAAO,OAAO,GAAG,EAAE,KAAK,QAAS,cAAc,EAAE,KAAK,KAAMxB,EAAK,OAASA,EAAK,EAAE,EAC5FgL,EAAUnJ,EAAS,OAAO,SAAU,cAAc,EACxD,OAAAmJ,EAAQ,KAAK,QAAS,aAAa,EAAE,KAAK,IAAK,CAAC,EAAE,KAAK,QAAS,EAAE,EAAE,KAAK,SAAU,EAAE,EACrFlI,EAAiB9C,EAAMgL,CAAO,EAC9BhL,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,OAAO9H,EAAM,EAAGgE,CAAK,CAClD,EACSnC,CACT,EAAG,OAAO,EACN2J,EAA2B1L,EAAO,CAAC0B,EAAQxB,EAAMyL,IAAQ,CAC3D,MAAM5J,EAAWL,EAAO,OAAO,GAAG,EAAE,KAAK,QAAS,cAAc,EAAE,KAAK,KAAMxB,EAAK,OAASA,EAAK,EAAE,EAClG,IAAI6C,EAAQ,GACRe,EAAS,GACT6H,IAAQ,OACV5I,EAAQ,GACRe,EAAS,IAEX,MAAM2F,EAAQ1H,EAAS,OAAO,MAAM,EAAE,KAAK,IAAK,GAAKgB,EAAQ,CAAC,EAAE,KAAK,IAAK,GAAKe,EAAS,CAAC,EAAE,KAAK,QAASf,CAAK,EAAE,KAAK,SAAUe,CAAM,EAAE,KAAK,QAAS,WAAW,EAChK,OAAAd,EAAiB9C,EAAMuJ,CAAK,EAC5BvJ,EAAK,OAASA,EAAK,OAASA,EAAK,QAAU,EAC3CA,EAAK,MAAQA,EAAK,MAAQA,EAAK,QAAU,EACzCA,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,KAAK9H,EAAMgE,CAAK,CAC7C,EACSnC,CACT,EAAG,UAAU,EACT6J,GAAsB5L,EAAO,CAAC0B,EAAQxB,IAAS,CACjD,MAAM6B,EAAWL,EAAO,OAAO,GAAG,EAAE,KAAK,QAAS,cAAc,EAAE,KAAK,KAAMxB,EAAK,OAASA,EAAK,EAAE,EAC5FqL,EAAcxJ,EAAS,OAAO,SAAU,cAAc,EACtDmJ,EAAUnJ,EAAS,OAAO,SAAU,cAAc,EACxD,OAAAmJ,EAAQ,KAAK,QAAS,aAAa,EAAE,KAAK,IAAK,CAAC,EAAE,KAAK,QAAS,EAAE,EAAE,KAAK,SAAU,EAAE,EACrFK,EAAY,KAAK,QAAS,WAAW,EAAE,KAAK,IAAK,CAAC,EAAE,KAAK,QAAS,EAAE,EAAE,KAAK,SAAU,EAAE,EACvFvI,EAAiB9C,EAAMgL,CAAO,EAC9BhL,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,OAAO9H,EAAM,EAAGgE,CAAK,CAClD,EACSnC,CACT,EAAG,KAAK,EACJ8J,GAA4B7L,EAAO,CAAC0B,EAAQxB,IAAS,OACvD,MAAMoC,EAAcpC,EAAK,QAAU,EAC7B4L,EAAa,EACbC,EAAa,EACnB,IAAIlK,EACC3B,EAAK,QAGR2B,EAAU,QAAU3B,EAAK,QAFzB2B,EAAU,eAIZ,MAAME,EAAWL,EAAO,OAAO,GAAG,EAAE,KAAK,QAASG,CAAO,EAAE,KAAK,KAAM3B,EAAK,OAASA,EAAK,EAAE,EACrFgI,EAAQnG,EAAS,OAAO,OAAQ,cAAc,EAC9CiK,EAAUjK,EAAS,OAAO,MAAM,EAChCkK,EAAalK,EAAS,OAAO,MAAM,EACzC,IAAImK,EAAW,EACXC,EAAYL,EAChB,MAAMM,EAAiBrK,EAAS,OAAO,GAAG,EAAE,KAAK,QAAS,OAAO,EACjE,IAAIsK,EAAc,EAClB,MAAMC,GAAepM,EAAAA,EAAK,UAAU,cAAfA,YAAAA,EAA6B,GAC5CqM,EAAqBrM,EAAK,UAAU,YAAY,CAAC,EAAI,IAASA,EAAK,UAAU,YAAY,CAAC,EAAI,IAAS,GACvGsM,EAAiBJ,EAAe,KAAI,EAAG,YAAY5K,EAAoB+K,EAAoBrM,EAAK,WAAY,GAAM,EAAI,CAAC,EAC7H,IAAIuM,EAAgBD,EAAe,UACnC,GAAIzL,EAASC,EAAS,EAAG,UAAU,UAAU,EAAG,CAC9C,MAAMX,EAAMmM,EAAe,SAAS,CAAC,EAC/BjK,EAAKqI,EAAQ4B,CAAc,EACjCC,EAAgBpM,EAAI,wBACpBkC,EAAG,KAAK,QAASkK,EAAc,KAAK,EACpClK,EAAG,KAAK,SAAUkK,EAAc,MAAM,CACvC,CACGvM,EAAK,UAAU,YAAY,CAAC,IAC9BiM,GAAaM,EAAc,OAASX,EACpCI,GAAYO,EAAc,OAE5B,IAAIC,EAAmBxM,EAAK,UAAU,MAClCA,EAAK,UAAU,OAAS,QAAUA,EAAK,UAAU,OAAS,KACxDc,EAAS,EAAG,UAAU,WACxB0L,GAAoB,OAASxM,EAAK,UAAU,KAAO,OAEnDwM,GAAoB,IAAMxM,EAAK,UAAU,KAAO,KAGpD,MAAMyM,EAAkBP,EAAe,KAAI,EAAG,YAAY5K,EAAoBkL,EAAkBxM,EAAK,WAAY,GAAM,EAAI,CAAC,EAC5H0K,EAAQ+B,CAAe,EAAE,KAAK,QAAS,YAAY,EACnD,IAAIC,EAAiBD,EAAgB,UACrC,GAAI5L,EAASC,EAAS,EAAG,UAAU,UAAU,EAAG,CAC9C,MAAMX,EAAMsM,EAAgB,SAAS,CAAC,EAChCpK,EAAKqI,EAAQ+B,CAAe,EAClCC,EAAiBvM,EAAI,wBACrBkC,EAAG,KAAK,QAASqK,EAAe,KAAK,EACrCrK,EAAG,KAAK,SAAUqK,EAAe,MAAM,CACxC,CACDT,GAAaS,EAAe,OAASd,EACjCc,EAAe,MAAQV,IACzBA,EAAWU,EAAe,OAE5B,MAAMC,EAAkB,CAAA,EACxB3M,EAAK,UAAU,QAAQ,QAAS4M,GAAW,CACzC,MAAMC,EAAaD,EAAO,oBAC1B,IAAIE,EAAaD,EAAW,YACxB/L,EAAS,EAAG,UAAU,aACxBgM,EAAaA,EAAW,QAAQ,KAAM,MAAM,EAAE,QAAQ,KAAM,MAAM,GAEpE,MAAMC,EAAMb,EAAe,KAAI,EAAG,YAChC5K,EACEwL,EACAD,EAAW,SAAWA,EAAW,SAAW7M,EAAK,WACjD,GACA,EACD,CACP,EACI,IAAImC,EAAO4K,EAAI,UACf,GAAIlM,EAASC,EAAS,EAAG,UAAU,UAAU,EAAG,CAC9C,MAAMX,EAAM4M,EAAI,SAAS,CAAC,EACpB1K,EAAKqI,EAAQqC,CAAG,EACtB5K,EAAOhC,EAAI,wBACXkC,EAAG,KAAK,QAASF,EAAK,KAAK,EAC3BE,EAAG,KAAK,SAAUF,EAAK,MAAM,CAC9B,CACGA,EAAK,MAAQ6J,IACfA,EAAW7J,EAAK,OAElB8J,GAAa9J,EAAK,OAASyJ,EAC3Be,EAAgB,KAAKI,CAAG,CAC5B,CAAG,EACDd,GAAaJ,EACb,MAAMmB,EAAe,CAAA,EA8BrB,GA7BAhN,EAAK,UAAU,QAAQ,QAAS4M,GAAW,CACzC,MAAMC,EAAaD,EAAO,oBAC1B,IAAIK,EAAcJ,EAAW,YACzB/L,EAAS,EAAG,UAAU,aACxBmM,EAAcA,EAAY,QAAQ,KAAM,MAAM,EAAE,QAAQ,KAAM,MAAM,GAEtE,MAAMF,EAAMb,EAAe,KAAI,EAAG,YAChC5K,EACE2L,EACAJ,EAAW,SAAWA,EAAW,SAAW7M,EAAK,WACjD,GACA,EACD,CACP,EACI,IAAImC,EAAO4K,EAAI,UACf,GAAIlM,EAASC,EAAS,EAAG,UAAU,UAAU,EAAG,CAC9C,MAAMX,EAAM4M,EAAI,SAAS,CAAC,EACpB1K,EAAKqI,EAAQqC,CAAG,EACtB5K,EAAOhC,EAAI,wBACXkC,EAAG,KAAK,QAASF,EAAK,KAAK,EAC3BE,EAAG,KAAK,SAAUF,EAAK,MAAM,CAC9B,CACGA,EAAK,MAAQ6J,IACfA,EAAW7J,EAAK,OAElB8J,GAAa9J,EAAK,OAASyJ,EAC3BoB,EAAa,KAAKD,CAAG,CACzB,CAAG,EACDd,GAAaJ,EACTO,EAAc,CAChB,IAAIc,GAAUlB,EAAWO,EAAc,OAAS,EAChD7B,EAAQ4B,CAAc,EAAE,KACtB,YACA,eAAiB,GAAKN,EAAW,EAAIkB,GAAU,KAAO,GAAKjB,EAAY,EAAI,GACjF,EACIE,EAAcI,EAAc,OAASX,CACtC,CACD,IAAIuB,IAASnB,EAAWU,EAAe,OAAS,EAChDhC,OAAAA,EAAQ+B,CAAe,EAAE,KACvB,YACA,eAAiB,GAAKT,EAAW,EAAImB,IAAS,MAAQ,GAAKlB,EAAY,EAAIE,GAAe,GAC9F,EACEA,GAAeO,EAAe,OAASd,EACvCE,EAAQ,KAAK,QAAS,SAAS,EAAE,KAAK,KAAM,CAACE,EAAW,EAAI5J,CAAW,EAAE,KAAK,KAAM4J,EAAW,EAAI5J,CAAW,EAAE,KAAK,KAAM,CAAC6J,EAAY,EAAI7J,EAAcyJ,EAAaM,CAAW,EAAE,KAAK,KAAM,CAACF,EAAY,EAAI7J,EAAcyJ,EAAaM,CAAW,EACtPA,GAAeN,EACfc,EAAgB,QAASI,GAAQ,OAC/BrC,EAAQqC,CAAG,EAAE,KACX,YACA,cAAgB,CAACf,EAAW,EAAI,MAAQ,GAAKC,EAAY,EAAIE,EAAcN,EAAa,GAAK,GACnG,EACI,MAAMuB,EAAaL,GAAAA,YAAAA,EAAK,UACxBZ,KAAgBiB,EAAAA,GAAAA,YAAAA,EAAY,SAAZA,KAAAA,EAAsB,GAAKxB,CAC/C,CAAG,EACDO,GAAeN,EACfE,EAAW,KAAK,QAAS,SAAS,EAAE,KAAK,KAAM,CAACC,EAAW,EAAI5J,CAAW,EAAE,KAAK,KAAM4J,EAAW,EAAI5J,CAAW,EAAE,KAAK,KAAM,CAAC6J,EAAY,EAAI7J,EAAcyJ,EAAaM,CAAW,EAAE,KAAK,KAAM,CAACF,EAAY,EAAI7J,EAAcyJ,EAAaM,CAAW,EACzPA,GAAeN,EACfmB,EAAa,QAASD,GAAQ,OAC5BrC,EAAQqC,CAAG,EAAE,KACX,YACA,cAAgB,CAACf,EAAW,EAAI,MAAQ,GAAKC,EAAY,EAAIE,GAAe,GAClF,EACI,MAAMiB,EAAaL,GAAAA,YAAAA,EAAK,UACxBZ,KAAgBiB,EAAAA,GAAAA,YAAAA,EAAY,SAAZA,KAAAA,EAAsB,GAAKxB,CAC/C,CAAG,EACD5D,EAAM,KAAK,QAAShI,EAAK,KAAK,EAAE,KAAK,QAAS,mBAAmB,EAAE,KAAK,IAAK,CAACgM,EAAW,EAAI5J,CAAW,EAAE,KAAK,IAAK,EAAE6J,EAAY,GAAK7J,CAAW,EAAE,KAAK,QAAS4J,EAAWhM,EAAK,OAAO,EAAE,KAAK,SAAUiM,EAAYjM,EAAK,OAAO,EAClO8C,EAAiB9C,EAAMgI,CAAK,EAC5BhI,EAAK,UAAY,SAASgE,EAAO,CAC/B,OAAO8D,EAAkB,KAAK9H,EAAMgE,CAAK,CAC7C,EACSnC,CACT,EAAG,WAAW,EACVwL,EAAS,CACX,QAAS/E,EACT,UAAAyB,GACA,SAAAzB,EACA,KAAAmB,GACA,UAAAO,GACA,cAAAM,GACA,OAAA7B,GACA,OAAAsC,GACA,aAAAE,GACA,QAAAH,GACA,QAAApC,GACA,YAAAG,GACA,oBAAAE,GACA,WAAAC,GACA,UAAAE,GACA,UAAAC,GACA,cAAAC,GACA,qBAAAC,GACA,SAAAC,GACA,MAAAiC,GACA,IAAAG,GACA,KAAMzD,GACN,WAAAqD,GACA,KAAME,EACN,KAAMA,EACN,UAAAG,EACF,EACI2B,EAAY,CAAA,EACZC,GAA6BzN,EAAO,MAAO0N,EAAMxN,EAAMyL,IAAQ,CACjE,IAAIgC,EACAxE,EACJ,GAAIjJ,EAAK,KAAM,CACb,IAAI0N,EACA5M,EAAS,EAAG,gBAAkB,UAChC4M,EAAS,OACA1N,EAAK,aACd0N,EAAS1N,EAAK,YAAc,UAE9ByN,EAAQD,EAAK,OAAO,OAAO,EAAE,KAAK,aAAcxN,EAAK,IAAI,EAAE,KAAK,SAAU0N,CAAM,EAChFzE,EAAK,MAAMoE,EAAOrN,EAAK,KAAK,EAAEyN,EAAOzN,EAAMyL,CAAG,CAClD,MACIxC,EAAK,MAAMoE,EAAOrN,EAAK,KAAK,EAAEwN,EAAMxN,EAAMyL,CAAG,EAC7CgC,EAAQxE,EAEV,OAAIjJ,EAAK,SACPiJ,EAAG,KAAK,QAASjJ,EAAK,OAAO,EAE3BA,EAAK,OACPiJ,EAAG,KAAK,QAAS,gBAAkBjJ,EAAK,KAAK,EAE/CsN,EAAUtN,EAAK,EAAE,EAAIyN,EACjBzN,EAAK,cACPsN,EAAUtN,EAAK,EAAE,EAAE,KAAK,QAASsN,EAAUtN,EAAK,EAAE,EAAE,KAAK,OAAO,EAAI,YAAY,EAE3EyN,CACT,EAAG,YAAY,EACXE,GAA8B7N,EAAO,CAAC0N,EAAMxN,IAAS,CACvDsN,EAAUtN,EAAK,EAAE,EAAIwN,CACvB,EAAG,aAAa,EACZI,GAAwB9N,EAAO,IAAM,CACvCwN,EAAY,CAAA,CACd,EAAG,OAAO,EACNO,GAA+B/N,EAAQE,GAAS,CAClD,MAAMiJ,EAAKqE,EAAUtN,EAAK,EAAE,EAC5Be,EAAI,MACF,oBACAf,EAAK,KACLA,EACA,cAAgBA,EAAK,EAAIA,EAAK,MAAQ,EAAI,GAAK,KAAOA,EAAK,MAAQ,EAAI,GAC3E,EACE,MAAM8D,EAAU,EACVgK,EAAO9N,EAAK,MAAQ,EAC1B,OAAIA,EAAK,YACPiJ,EAAG,KACD,YACA,cAAgBjJ,EAAK,EAAI8N,EAAO9N,EAAK,MAAQ,GAAK,MAAQA,EAAK,EAAIA,EAAK,OAAS,EAAI8D,GAAW,GACtG,EAEImF,EAAG,KAAK,YAAa,aAAejJ,EAAK,EAAI,KAAOA,EAAK,EAAI,GAAG,EAE3D8N,CACT,EAAG,cAAc","x_google_ignoreList":[0]}