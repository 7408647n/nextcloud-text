/*! third party licenses: js/vendor.LICENSE.txt */
import{p as B}from"./chunk-RYO7GUH3-BgOyIAeM.chunk.mjs";import{B as P,s as S,g as W,q as z,r as F,b as T,c as v,_ as i,l as u,D as $,E as D,v as E,H as A,k as H}from"./mermaid.core-DqdNzqxr.chunk.mjs";import{p as R}from"./gitGraph-YCYPL57B-BfdfEqXu.chunk.mjs";import"./modulepreload-polyfill-DMTabKmO.chunk.mjs";import"./emoji-picker-SoWZqoso.chunk.mjs";import"./NcNoteCard-CImn6F9p-ChK0-hvc.chunk.mjs";import"./vue.runtime.esm-DaLNuXGQ.chunk.mjs";import"./_baseUniq-D0rUJipT.chunk.mjs";import"./_basePickBy-Bti6ONX5.chunk.mjs";import"./clone-CittjnBs.chunk.mjs";var w={packet:[]},x=structuredClone(w),Y=P.packet,L=i(()=>{const t=$({...Y,...D().packet});return t.showBits&&(t.paddingY+=10),t},"getConfig"),q=i(()=>x.packet,"getPacket"),I=i(t=>{t.length>0&&x.packet.push(t)},"pushWord"),M=i(()=>{E(),x=structuredClone(w)},"clear"),m={pushWord:I,getPacket:q,getConfig:L,clear:M,setAccTitle:S,getAccTitle:W,setDiagramTitle:z,getDiagramTitle:F,getAccDescription:T,setAccDescription:v},N=1e4,X=i(t=>{B(t,m);let e=-1,o=[],s=1;const{bitsPerRow:n}=m.getConfig();for(let{start:r,end:a,label:p}of t.blocks){if(a&&a<r)throw new Error("Packet block ".concat(r," - ").concat(a," is invalid. End must be greater than start."));if(r!==e+1)throw new Error("Packet block ".concat(r," - ").concat(a!=null?a:r," is not contiguous. It should start from ").concat(e+1,"."));for(e=a!=null?a:r,u.debug("Packet block ".concat(r," - ").concat(e," with label ").concat(p));o.length<=n+1&&m.getPacket().length<N;){const[h,c]=_({start:r,end:a,label:p},s,n);if(o.push(h),h.end+1===s*n&&(m.pushWord(o),o=[],s++),!c)break;({start:r,end:a,label:p}=c)}}m.pushWord(o)},"populate"),_=i((t,e,o)=>{if(t.end===void 0&&(t.end=t.start),t.start>t.end)throw new Error("Block start ".concat(t.start," is greater than block end ").concat(t.end,"."));return t.end+1<=e*o?[t,void 0]:[{start:t.start,end:e*o-1,label:t.label},{start:e*o,end:t.end,label:t.label}]},"getNextFittingBlock"),j={parse:i(async t=>{const e=await R("packet",t);u.debug(e),X(e)},"parse")},G=i((t,e,o,s)=>{const n=s.db,r=n.getConfig(),{rowHeight:a,paddingY:p,bitWidth:h,bitsPerRow:c}=r,f=n.getPacket(),l=n.getDiagramTitle(),k=a+p,d=k*(f.length+1)-(l?0:a),b=h*c+2,g=A(e);g.attr("viewbox","0 0 ".concat(b," ").concat(d)),H(g,d,b,r.useMaxWidth);for(const[y,C]of f.entries())J(g,C,y,r);g.append("text").text(l).attr("x",b/2).attr("y",d-k/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")},"draw"),J=i((t,e,o,{rowHeight:s,paddingX:n,paddingY:r,bitWidth:a,bitsPerRow:p,showBits:h})=>{const c=t.append("g"),f=o*(s+r)+r;for(const l of e){const k=l.start%p*a+1,d=(l.end-l.start+1)*a-n;if(c.append("rect").attr("x",k).attr("y",f).attr("width",d).attr("height",s).attr("class","packetBlock"),c.append("text").attr("x",k+d/2).attr("y",f+s/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(l.label),!h)continue;const b=l.end===l.start,g=f-2;c.append("text").attr("x",k+(b?d/2:0)).attr("y",g).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",b?"middle":"start").text(l.start),b||c.append("text").attr("x",k+d).attr("y",g).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(l.end)}},"drawWord"),K={draw:G},O={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},Q=i(({packet:t}={})=>{const e=$(O,t);return"\n	.packetByte {\n		font-size: ".concat(e.byteFontSize,";\n	}\n	.packetByte.start {\n		fill: ").concat(e.startByteColor,";\n	}\n	.packetByte.end {\n		fill: ").concat(e.endByteColor,";\n	}\n	.packetLabel {\n		fill: ").concat(e.labelColor,";\n		font-size: ").concat(e.labelFontSize,";\n	}\n	.packetTitle {\n		fill: ").concat(e.titleColor,";\n		font-size: ").concat(e.titleFontSize,";\n	}\n	.packetBlock {\n		stroke: ").concat(e.blockStrokeColor,";\n		stroke-width: ").concat(e.blockStrokeWidth,";\n		fill: ").concat(e.blockFillColor,";\n	}\n	")},"styles"),st={parser:j,db:m,renderer:K,styles:Q};export{st as diagram};
