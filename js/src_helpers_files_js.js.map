{"version":3,"file":"src_helpers_files_js.js?v=184e30780884594f566a","mappings":"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","sources":["webpack:///text/src/helpers/files.js","webpack:///text/src/helpers/mime.js","webpack:///text/src/helpers/token.js","webpack:///text/src/store/mutation-types.js","webpack:///text/src/store/plugin.js","webpack:///text/src/store/index.js"],"sourcesContent":["/**\n * @copyright Copyright (c) 2019 Julius Härtl <jus@bitgrid.net>\n *\n * @author Julius Härtl <jus@bitgrid.net>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { emit } from '@nextcloud/event-bus'\nimport { Header, addNewFileMenuEntry, Permission, File } from '@nextcloud/files'\nimport { imagePath } from '@nextcloud/router'\nimport { loadState } from '@nextcloud/initial-state'\n\nimport { getSharingToken } from './token.js'\nimport { openMimetypes } from './mime.js'\nimport store from '../store/index.js'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { showSuccess, showError } from '@nextcloud/dialogs'\nimport axios from '@nextcloud/axios'\nimport { dirname } from 'path'\n\nimport FilePlusSvg from '@mdi/svg/svg/file-plus.svg'\n\nconst FILE_ACTION_IDENTIFIER = 'Edit with text app'\n\nconst registerFileCreate = () => {\n\tconst newFileMenuPlugin = {\n\t\tattach(menu) {\n\t\t\tconst fileList = menu.fileList\n\n\t\t\t// only attach to main file list, public view is not supported yet\n\t\t\tif (fileList.id !== 'files' && fileList.id !== 'files.public') {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// register the new menu entry\n\t\t\tmenu.addMenuEntry({\n\t\t\t\tid: 'file',\n\t\t\t\tdisplayName: t('text', 'New text file'),\n\t\t\t\ttemplateName: t('text', 'New text file') + '.' + loadState('text', 'default_file_extension'),\n\t\t\t\ticonClass: 'icon-filetype-text',\n\t\t\t\tfileType: 'file',\n\t\t\t\tactionLabel: t('text', 'Create new text file'),\n\t\t\t\tactionHandler(name) {\n\t\t\t\t\tfileList.createFile(name).then(function(status, data) {\n\t\t\t\t\t\tconst fileInfoModel = new OCA.Files.FileInfoModel(data)\n\t\t\t\t\t\tif (typeof OCA.Viewer !== 'undefined') {\n\t\t\t\t\t\t\tOCA.Files.fileActions.triggerAction('view', fileInfoModel, fileList)\n\t\t\t\t\t\t} else if (typeof OCA.Viewer === 'undefined') {\n\t\t\t\t\t\t\tOCA.Files.fileActions.triggerAction(FILE_ACTION_IDENTIFIER, fileInfoModel, fileList)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t})\n\t\t},\n\t}\n\tOC.Plugins.register('OCA.Files.NewFileMenu', newFileMenuPlugin)\n}\n\nconst registerFileActionFallback = () => {\n\tconst sharingToken = getSharingToken()\n\tconst filesTable = document.querySelector('#preview table.files-filestable')\n\tif (!sharingToken || !filesTable) {\n\t\tconst ViewerRoot = document.createElement('div')\n\t\tViewerRoot.id = 'text-viewer-fallback'\n\t\tdocument.body.appendChild(ViewerRoot)\n\t\tconst registerAction = (mime) => OCA.Files.fileActions.register(\n\t\t\tmime,\n\t\t\tFILE_ACTION_IDENTIFIER,\n\t\t\tOC.PERMISSION_UPDATE | OC.PERMISSION_READ,\n\t\t\timagePath('core', 'actions/rename'),\n\t\t\t(filename) => {\n\t\t\t\tconst file = window.FileList.findFile(filename)\n\t\t\t\tPromise.all([\n\t\t\t\t\timport('vue'),\n\t\t\t\t\timport(/* webpackChunkName: \"files-modal\" */'./../components/PublicFilesEditor.vue'),\n\t\t\t\t]).then((imports) => {\n\t\t\t\t\tconst path = window.FileList.getCurrentDirectory() + '/' + filename\n\t\t\t\t\tconst Vue = imports[0].default\n\t\t\t\t\tVue.prototype.t = window.t\n\t\t\t\t\tVue.prototype.n = window.n\n\t\t\t\t\tVue.prototype.OCA = window.OCA\n\t\t\t\t\tconst Editor = imports[1].default\n\t\t\t\t\tconst vm = new Vue({\n\t\t\t\t\t\trender: function(h) { // eslint-disable-line\n\t\t\t\t\t\t\tconst self = this\n\t\t\t\t\t\t\treturn h(Editor, {\n\t\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\t\tfileId: file ? file.id : null,\n\t\t\t\t\t\t\t\t\tactive: true,\n\t\t\t\t\t\t\t\t\tshareToken: sharingToken,\n\t\t\t\t\t\t\t\t\trelativePath: path,\n\t\t\t\t\t\t\t\t\tmimeType: file.mimetype,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\t\t\tclose: function() { // eslint-disable-line\n\t\t\t\t\t\t\t\t\t\tself.$destroy()\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t\tvm.$mount(ViewerRoot)\n\t\t\t\t})\n\t\t\t},\n\t\t\tt('text', 'Edit'),\n\t\t)\n\n\t\tfor (let i = 0; i < openMimetypes.length; i++) {\n\t\t\tregisterAction(openMimetypes[i])\n\t\t\tOCA.Files.fileActions.setDefault(openMimetypes[i], FILE_ACTION_IDENTIFIER)\n\t\t}\n\t}\n\n}\n\nlet newWorkspaceCreated = false\n\nexport const addMenuRichWorkspace = () => {\n\tconst descriptionFile = t('text', 'Readme') + '.' + loadState('text', 'default_file_extension')\n\taddNewFileMenuEntry({\n\t\tid: 'rich-workspace-init',\n\t\tdisplayName: t('text', 'Add description'),\n\t\tenabled(context) {\n\t\t\tif (Number(context.attributes['rich-workspace-file'])) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn (context.permissions & Permission.CREATE) !== 0\n\t\t},\n\t\ticonSvgInline: FilePlusSvg,\n\t\tasync handler(context, content) {\n\t\t\tconst contentNames = content.map((node) => node.basename)\n\n\t\t\tif (contentNames.includes(descriptionFile)) {\n\t\t\t\tshowError(t('text', '\"{name}\" already exist!', { name: descriptionFile }))\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst source = context.encodedSource + '/' + encodeURIComponent(descriptionFile)\n\t\t\tconst response = await axios({\n\t\t\t\tmethod: 'PUT',\n\t\t\t\turl: source,\n\t\t\t\theaders: {\n\t\t\t\t\tOverwrite: 'F',\n\t\t\t\t},\n\t\t\t})\n\t\t\tconst fileid = parseInt(response.headers['oc-fileid'])\n\t\t\tconst file = new File({\n\t\t\t\tsource: context.source + '/' + encodeURIComponent(descriptionFile),\n\t\t\t\tid: fileid,\n\t\t\t\tmtime: new Date(),\n\t\t\t\tmime: 'text/markdown',\n\t\t\t\towner: getCurrentUser()?.uid || null,\n\t\t\t\tpermissions: Permission.ALL,\n\t\t\t\troot: context?.root || '/files/' + getCurrentUser()?.uid,\n\t\t\t})\n\n\t\t\tshowSuccess(t('text', 'Created \"{name}\"', { name: descriptionFile }))\n\n\t\t\tif (contentNames.length === 0) {\n\t\t\t\t// We currently have no way to reliably trigger the filelist header rendering\n\t\t\t\t// When starting off in a new empty folder the header will only be rendered on a new PROPFIND\n\t\t\t\tnewWorkspaceCreated = file\n\t\t\t}\n\t\t\temit('files:node:created', file)\n\t\t},\n\t})\n}\n\nlet vm = null\n\nexport const FilesWorkspaceHeader = new Header({\n\tid: 'workspace',\n\torder: 10,\n\n\tenabled(folder, view) {\n\t\treturn view.id === 'files'\n\t},\n\n\tasync render(el, folder, view) {\n\t\tif (vm) {\n\t\t\t// Enforce destroying of the old rendering and rerender as the FilesListHeader calls render on every folder change\n\t\t\tvm.$destroy()\n\t\t\tvm = null\n\t\t}\n\t\tconst hasRichWorkspace = !!folder.attributes['rich-workspace-file'] || !!newWorkspaceCreated\n\t\tconst path = newWorkspaceCreated ? dirname(newWorkspaceCreated.path) : folder.path\n\t\tconst content = newWorkspaceCreated ? '' : folder.attributes['rich-workspace']\n\n\t\tnewWorkspaceCreated = false\n\n\t\tconst { default: RichWorkspace } = await import('./../views/RichWorkspace.vue')\n\n\t\timport('vue').then((module) => {\n\t\t\tel.id = 'files-workspace-wrapper'\n\n\t\t\t// Todo: remove this hack\n\t\t\tconst Vue = module.default\n\t\t\tVue.prototype.t = window.t\n\t\t\tVue.prototype.n = window.n\n\t\t\tVue.prototype.OCA = window.OCA\n\n\t\t\tconst View = Vue.extend(RichWorkspace)\n\t\t\tvm = new View({\n\t\t\t\tpropsData: {\n\t\t\t\t\tpath,\n\t\t\t\t\thasRichWorkspace,\n\t\t\t\t\tcontent,\n\t\t\t\t},\n\t\t\t\tstore,\n\t\t\t}).$mount(el)\n\t\t})\n\t},\n\n\tupdated(folder, view) {\n\t\tnewWorkspaceCreated = false\n\n\t\t// Currently there is not much use in updating the vue instance props since render is called on every folder change\n\t\t// removing the rendered element from the DOM\n\t\t// This is only relevant if switching to a folder that has no content as then the render function is not called\n\n\t\tconst hasRichWorkspace = !!folder.attributes['rich-workspace-file']\n\t\tvm.path = folder.path\n\t\tvm.hasRichWorkspace = hasRichWorkspace\n\t\tvm.content = folder.attributes['rich-workspace']\n\t},\n})\n\nexport {\n\tregisterFileActionFallback,\n\tregisterFileCreate,\n\tFILE_ACTION_IDENTIFIER,\n}\n","/*\n * @copyright Copyright (c) 2019 Julius Härtl <jus@bitgrid.net>\n *\n * @author Julius Härtl <jus@bitgrid.net>\n *\n * @license GNU AGPL version 3 or any later version\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nconst openMimetypesMarkdown = [\n\t'text/markdown',\n]\n\nconst openMimetypesPlainText = [\n\t'text/plain',\n\t'application/cmd',\n\t'application/x-empty',\n\t'application/x-msdos-program',\n\t'application/javascript',\n\t'application/json',\n\t'application/x-perl',\n\t'application/x-php',\n\t'application/x-tex',\n\t'application/xml',\n\t'application/yaml',\n\t'text/asciidoc',\n\t'text/css',\n\t'text/html',\n\t'text/org',\n\t'text/x-c',\n\t'text/x-c++src',\n\t'text/x-h',\n\t'text/x-java-source',\n\t'text/x-ldif',\n\t'text/x-python',\n\t'text/x-shellscript',\n]\n\nif (!OC.appswebroots?.richdocuments && !OC.appswebroots?.onlyoffice) {\n\topenMimetypesPlainText.push('text/csv')\n}\n\nconst openMimetypes = [...openMimetypesMarkdown, ...openMimetypesPlainText]\n\nexport {\n\topenMimetypes,\n\topenMimetypesMarkdown,\n\topenMimetypesPlainText,\n}\n","const getSharingToken = () => document.getElementById('sharingToken')\n\t? document.getElementById('sharingToken').value\n\t: null\n\nexport { getSharingToken }\n","export const SET_VIEW_WIDTH = 'SET_VIEW_WIDTH'\nexport const SET_SHOW_AUTHOR_ANNOTATIONS = 'SET_SHOW_AUTHOR_ANNOTATIONS'\nexport const SET_CURRENT_SESSION = 'SET_CURRENT_SESSION'\nexport const SET_HEADINGS = 'SET_HEADINGS'\nexport const SET_ATTACHMENT_LIST = 'SET_ATTACHMENT_LIST'\n","/**\n * @copyright Copyright (c) 2022 Vinicius Reis <vinicius@nextcloud.com>\n *\n * @author Vinicius Reis <vinicius@nextcloud.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport debounce from 'debounce'\nimport { SET_VIEW_WIDTH } from './mutation-types.js'\n\nconst getClientWidth = () => document.documentElement.clientWidth\n\nconst plugin = ({ commit }) => {\n\tconst onResize = debounce(() => {\n\t\tcommit(`text/${SET_VIEW_WIDTH}`, getClientWidth())\n\t}, 100)\n\n\twindow.addEventListener('resize', onResize)\n}\n\nexport { getClientWidth }\n\nexport default plugin\n","/*\n * @copyright Copyright (c) 2020 Julius Härtl <jus@bitgrid.net>\n *\n * @author Julius Härtl <jus@bitgrid.net>\n *\n * @license GNU AGPL version 3 or any later version\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport Vue from 'vue'\nimport Vuex, { Store } from 'vuex'\nimport { getBuilder } from '@nextcloud/browser-storage'\nimport { generateUrl } from '@nextcloud/router'\nimport axios from '@nextcloud/axios'\n\nimport {\n\tSET_SHOW_AUTHOR_ANNOTATIONS,\n\tSET_CURRENT_SESSION,\n\tSET_VIEW_WIDTH,\n\tSET_HEADINGS,\n\tSET_ATTACHMENT_LIST,\n} from './mutation-types.js'\nimport plugin, { getClientWidth } from './plugin.js'\n\nconst persistentStorage = getBuilder('text').persist().build()\n\nVue.use(Vuex)\n\nexport const textModule = {\n\tstate: {\n\t\tshowAuthorAnnotations: persistentStorage.getItem('showAuthorAnnotations') === 'true',\n\t\tcurrentSession: persistentStorage.getItem('currentSession'),\n\t\tviewWidth: getClientWidth(),\n\t\theadings: Object.freeze([]),\n\t\tattachmentList: [],\n\t},\n\tgetters: {\n\t\timageAttachments: (state) => state.attachmentList.filter(a => a.isImage),\n\t\tfindAttachment: (state) => (fileName) => state.attachmentList.find(a => a.name === fileName),\n\t},\n\tmutations: {\n\t\t[SET_VIEW_WIDTH](state, value) {\n\t\t\tstate.viewWidth = value\n\t\t},\n\t\t[SET_SHOW_AUTHOR_ANNOTATIONS](state, value) {\n\t\t\tstate.showAuthorAnnotations = value\n\t\t\tpersistentStorage.setItem('showAuthorAnnotations', '' + value)\n\t\t},\n\t\t[SET_CURRENT_SESSION](state, value) {\n\t\t\tstate.currentSession = value\n\t\t\tpersistentStorage.setItem('currentSession', value)\n\t\t},\n\t\t[SET_HEADINGS](state, value) {\n\t\t\tif (state.headings.length !== value.length) {\n\t\t\t\tstate.headings = Object.freeze(value)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// merge with previous position\n\t\t\tconst old = state.headings\n\t\t\tconst headings = value.map((row, index) => {\n\t\t\t\tconst previous = old[index].level\n\n\t\t\t\treturn Object.freeze({\n\t\t\t\t\t...row,\n\t\t\t\t\tprevious,\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tstate.headings = Object.freeze(headings)\n\t\t},\n\t\t[SET_ATTACHMENT_LIST](state, value) {\n\t\t\tstate.attachmentList = value\n\t\t},\n\t},\n\tactions: {\n\t\tsetShowAuthorAnnotations({ commit }, value) {\n\t\t\tcommit(SET_SHOW_AUTHOR_ANNOTATIONS, value)\n\t\t},\n\t\tsetCurrentSession({ commit }, value) {\n\t\t\tcommit(SET_CURRENT_SESSION, value)\n\t\t},\n\t\tsetHeadings({ commit }, value) {\n\t\t\tcommit(SET_HEADINGS, value)\n\t\t},\n\t\tasync setAttachmentList({ commit, state }, { documentId, shareToken }) {\n\t\t\tconst response = await axios.post(generateUrl('/apps/text/attachments'), {\n\t\t\t\tdocumentId: state.currentSession?.documentId ?? documentId,\n\t\t\t\tsessionId: state.currentSession?.id,\n\t\t\t\tsessionToken: state.currentSession?.token,\n\t\t\t\tshareToken,\n\t\t\t})\n\n\t\t\tcommit(SET_ATTACHMENT_LIST, response.data)\n\t\t},\n\t},\n}\n\nconst store = new Store({\n\tplugins: [plugin],\n\tmodules: {\n\t\ttext: {\n\t\t\tnamespaced: true,\n\t\t\t...textModule,\n\t\t},\n\t},\n})\n\nexport default store\n"],"names":["FILE_ACTION_IDENTIFIER","registerFileActionFallback","sharingToken","getSharingToken","filesTable","document","querySelector","ViewerRoot","createElement","id","body","appendChild","registerAction","mime","OCA","Files","fileActions","register","OC","PERMISSION_UPDATE","PERMISSION_READ","imagePath","filename","file","window","FileList","findFile","Promise","all","then","imports","path","getCurrentDirectory","Vue","default","prototype","t","n","Editor","render","h","self","this","props","fileId","active","shareToken","relativePath","mimeType","mimetype","on","close","$destroy","$mount","i","openMimetypes","length","setDefault","newWorkspaceCreated","vm","Header","order","enabled","folder","view","el","hasRichWorkspace","attributes","dirname","content","RichWorkspace","module","View","extend","propsData","store","updated","openMimetypesPlainText","_OC$appswebroots","appswebroots","richdocuments","_OC$appswebroots2","onlyoffice","push","getElementById","value","SET_VIEW_WIDTH","SET_SHOW_AUTHOR_ANNOTATIONS","SET_CURRENT_SESSION","SET_HEADINGS","SET_ATTACHMENT_LIST","getClientWidth","documentElement","clientWidth","_ref","commit","onResize","debounce","concat","addEventListener","persistentStorage","getBuilder","persist","build","use","Vuex","textModule","state","showAuthorAnnotations","getItem","currentSession","viewWidth","headings","Object","freeze","attachmentList","getters","imageAttachments","filter","a","isImage","findAttachment","fileName","find","name","mutations","setItem","old","map","row","index","previous","level","actions","setShowAuthorAnnotations","setCurrentSession","_ref2","setHeadings","_ref3","setAttachmentList","_ref4","_ref5","_state$currentSession","_state$currentSession2","_state$currentSession3","_state$currentSession4","documentId","response","axios","post","generateUrl","sessionId","sessionToken","token","data","Store","plugins","plugin","modules","text","namespaced"],"sourceRoot":""}