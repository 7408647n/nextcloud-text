{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/typescript.js"],"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","DECORATOR","className","begin","ARGS","end","keywords","contains","QUOTE_STRING_MODE","APOS_STRING_MODE","NUMBER_MODE","PARAMS","excludeBegin","excludeEnd","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","aliases","BACKSLASH_ESCAPE","variants","C_NUMBER_RE","relevance","RE_STARTERS_RE","REGEXP_MODE","IDENT_RE","returnBegin","inherit","TITLE_MODE","illegal","beginKeywords"],"mappings":"6EAAAA,EAAAC,QAAA,SAAAC,GACA,IACAC,EAAA,CACAC,QACA,mTAKAC,QACA,yCACAC,SACA,6fASAC,EAAA,CACAC,UAAA,OACAC,MAAA,6BAGAC,EACA,CACAD,MAAA,MACAE,IAAA,KACAC,SAAAT,EACAU,SAAA,CACA,OACAX,EAAAY,kBACAZ,EAAAa,iBACAb,EAAAc,cAIAC,EAAA,CACAT,UAAA,SACAC,MAAA,KAAAE,IAAA,KACAO,cAAA,EACAC,YAAA,EACAP,SAAAT,EACAU,SAAA,CACAX,EAAAkB,oBACAlB,EAAAmB,qBACAd,EACAG,IAIA,OACAY,QAAA,OACAV,SAAAT,EACAU,SAAA,CACA,CACAL,UAAA,OACAC,MAAA,0BAEAP,EAAAa,iBACAb,EAAAY,kBACA,CACAN,UAAA,SACAC,MAAA,IAAAE,IAAA,IACAE,SAAA,CACAX,EAAAqB,iBACA,CACAf,UAAA,QACAC,MAAA,SAA0BE,IAAA,SAI1BT,EAAAkB,oBACAlB,EAAAmB,qBACA,CACAb,UAAA,SACAgB,SAAA,CACA,CAAWf,MAAA,mBACX,CAAWA,MAAA,oBACX,CAAWA,MAAAP,EAAAuB,cAEXC,UAAA,GAEA,CACAjB,MAAA,IAAAP,EAAAyB,eAAA,kCACAf,SAAA,oBACAC,SAAA,CACAX,EAAAkB,oBACAlB,EAAAmB,qBACAnB,EAAA0B,YACA,CACApB,UAAA,WACAC,MAAA,cAAAP,EAAA2B,SAAA,UAAAC,aAAA,EACAnB,IAAA,SACAE,SAAA,CACA,CACAL,UAAA,SACAgB,SAAA,CACA,CACAf,MAAAP,EAAA2B,UAEA,CACApB,MAAA,WAEA,CACAA,MAAA,KAAAE,IAAA,KACAO,cAAA,EAAAC,YAAA,EACAP,SAAAT,EACAU,SAAA,CACA,OACAX,EAAAkB,oBACAlB,EAAAmB,4BAQAK,UAAA,GAEA,CACAlB,UAAA,WACAC,MAAA,WAAAE,IAAA,QAAqCQ,YAAA,EACrCP,SAAAT,EACAU,SAAA,CACA,OACAX,EAAA6B,QAAA7B,EAAA8B,WAAA,CAAyCvB,MAhIzC,6BAiIAQ,GAEAgB,QAAA,IACAP,UAAA,GAEA,CACAQ,cAAA,cAAAvB,IAAA,KAA8CQ,YAAA,EAC9CN,SAAA,CACA,OACAI,IAGA,CACAR,MAAA,WACAG,SAAA,CAAmBN,SAAA,UACnBoB,UAAA,GAEA,CACAQ,cAAA,SAAAvB,IAAA,KAAyCQ,YAAA,GAEzC,CACAe,cAAA,YAAAvB,IAAA,KAA4CQ,YAAA,EAC5CP,SAAA,qBAEA,CACAH,MAAA,UAEA,CACAA,MAAA,MAAAP,EAAA2B,SAAAH,UAAA,GAEAnB,EACAG","file":"highlight/typescript.js?v=a06b1b1a48eb579bd71f","sourcesContent":["module.exports = function(hljs) {\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var KEYWORDS = {\n    keyword:\n      'in if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const class public private protected get set super ' +\n      'static implements enum export import declare type namespace abstract ' +\n      'as from extends async await',\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document any number boolean string void Promise'\n  };\n\n  var DECORATOR = {\n    className: 'meta',\n    begin: '@' + JS_IDENT_RE,\n  };\n\n  var ARGS =\n  {\n    begin: '\\\\(',\n    end: /\\)/,\n    keywords: KEYWORDS,\n    contains: [\n      'self',\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.NUMBER_MODE\n    ]\n  };\n\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      DECORATOR,\n      ARGS\n    ]\n  };\n\n  return {\n    aliases: ['ts'],\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        begin: /^\\s*['\"]use strict['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      { // template string\n        className: 'string',\n        begin: '`', end: '`',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst',\n            begin: '\\\\$\\\\{', end: '\\\\}'\n          }\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b(0[bB][01]+)' },\n          { begin: '\\\\b(0[oO][0-7]+)' },\n          { begin: hljs.C_NUMBER_RE }\n        ],\n        relevance: 0\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + hljs.IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.IDENT_RE\n                  },\n                  {\n                    begin: /\\(\\s*\\)/,\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS,\n                    contains: [\n                      'self',\n                      hljs.C_LINE_COMMENT_MODE,\n                      hljs.C_BLOCK_COMMENT_MODE\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: 'function', end: /[\\{;]/, excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          hljs.inherit(hljs.TITLE_MODE, { begin: JS_IDENT_RE }),\n          PARAMS\n        ],\n        illegal: /%/,\n        relevance: 0 // () => {} is more typical in TypeScript\n      },\n      {\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true,\n        contains: [\n          'self',\n          PARAMS\n        ]\n      },\n      { // prevent references like module.id from being higlighted as module definitions\n        begin: /module\\./,\n        keywords: { built_in: 'module' },\n        relevance: 0\n      },\n      {\n        beginKeywords: 'module', end: /\\{/, excludeEnd: true\n      },\n      {\n        beginKeywords: 'interface', end: /\\{/, excludeEnd: true,\n        keywords: 'interface extends'\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      {\n        begin: '\\\\.' + hljs.IDENT_RE, relevance: 0 // hack: prevents detection of keywords after dots\n      },\n      DECORATOR,\n      ARGS\n    ]\n  };\n};"],"sourceRoot":""}